{"version":3,"file":"static/webpack/static\\development\\pages\\b.js.c73e3c08dd4a74c1b022.hot-update.js","sources":["webpack:///./pages/b.js"],"sourcesContent":["import React,{useState,useReducer,useEffect,useLayoutEffect} from 'react'\r\n\r\nclass MyCount extends React.Component{\r\n  state={\r\n    count:0\r\n  }\r\n\r\n  componentDidMount(){\r\n    //状态更新\r\n    this.interval=setInterval(() => {\r\n      this.setState({count:this.state.count+1})\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    //定时器在组件卸载后需要清除 避免定时器内使用的变量不被释放报错\r\n    if(this.interval){\r\n      clearInterval(this.interval)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <span>{this.state.count}</span>\r\n  }\r\n}\r\nfunction countReducer(state,action){\r\n   switch (action.type) {\r\n     case 'add':\r\n       return state+1\r\n     case 'minus':\r\n       return state-1\r\n     default:\r\n       return state\r\n   }\r\n}\r\n//函数组件\r\nfunction MyCountFunc() {\r\n  // const [count,setCount]=useState(0)  //[a,b]\r\n  const [count,dispatchCount]=useReducer(countReducer,0)\r\n  const [name,setName]=useState('jokcy')\r\n  // setCount(1) //不基于新的count值\r\n  // setCount(c=>c+1) //基于新的count值\r\n\r\n  //组件渲染完成后会执行useEffect\r\n  // useEffect(()=>{\r\n  // //状态更新\r\n  //   const interval=setInterval(() => {\r\n  //     // setCount(c=>c+1)\r\n  //     dispatchCount({type:'add'})\r\n  //   }, 1000);\r\n  //   return ()=>clearInterval(interval)\r\n  // },[])\r\n  useEffect(()=>{\r\n    console.log('effect invoked')\r\n    return ()=>console.log('effect deteched')\r\n  })\r\n\r\n  useLayoutEffect(()=>{\r\n     console.log('layout effect invoked')\r\n    return ()=>console.log('layout effect deteched')\r\n  })\r\n    return (\r\n      <div>\r\n         <input value={name} onChange={(e)=>setName(e.target.value)}/>\r\n         <button onClick={()=>dispatchCount({type:'add'})}>{count}</button>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default MyCountFunc"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AArBA;AACA;AAsBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}