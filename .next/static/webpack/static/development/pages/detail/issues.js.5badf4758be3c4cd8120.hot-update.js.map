{"version":3,"file":"static/webpack/static\\development\\pages\\detail\\issues.js.5badf4758be3c4cd8120.hot-update.js","sources":["webpack:///./pages/detail/issues.js"],"sourcesContent":["import dynamid from 'next/dynamic'\r\nimport {useState,useCallback} from 'react'\r\nimport {Avatar,Button,Select} from 'antd'\r\nimport withRepoBasic from '../../components/with-repo-basic'\r\nimport SearchUser from '../../components/SearchUser'\r\n\r\nimport api from '../../lib/api'\r\n\r\nimport { getLastUpdated } from '../../lib/utils'\r\n\r\nconst MDRenderer = dynamid(()=>import('../../components/MarkdownRenderer'),{\r\n  loading:()=><p>Loading</p>\r\n})\r\n\r\nfunction IssueDetail({issue}){\r\n  return (\r\n    <div className=\"root\">\r\n      <MDRenderer content={issue.body} />\r\n      <div className=\"actions\">\r\n        <Button href={issue.html_url} target=\"_blank\">打开Issue讨论页面</Button>\r\n      </div>\r\n      <style jsx>{`\r\n        .root {\r\n          background: #fefefe;\r\n          padding: 20px;\r\n        }\r\n        .actions {\r\n          text-align: right;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction IssueItem({issue}){\r\n  const [showDetail,setShowDetail]=useState(false)\r\n\r\n  const toggleShowDetail=useCallback(()=>{\r\n    setShowDetail(detail=>!detail)\r\n  },[])\r\n\r\n   return (\r\n     <div>\r\n        <div className=\"issue\">\r\n          <Button \r\n              type=\"primary\" \r\n              size=\"small\" \r\n              style={{position:'absolute',right:10,top:10}}\r\n              onClick={toggleShowDetail}\r\n              >{showDetail?'隐藏':'查看'}</Button>\r\n          <div className=\"avatar\">\r\n            <Avatar src={issue.user.avatar_url} shape=\"square\" size={50} />\r\n          </div>\r\n          <div className=\"main-info\">\r\n            <h6>\r\n              <span>{issue.title}</span>\r\n            </h6>\r\n            <p className=\"sub-info\">\r\n              <span>Updated at {getLastUpdated(issue.updated_at)}</span>\r\n            </p>\r\n          </div>\r\n      <style jsx>{`\r\n          .issue {\r\n            display: flex;\r\n            position: relative;\r\n            padding: 10px;\r\n          }\r\n          .issue:hover {\r\n            background: #fafafa;\r\n          }\r\n          .issue + .issue {\r\n            border-top: 1px solid #eee;\r\n          }\r\n          .main-info > h6 {\r\n            max-width: 600px;\r\n            font-size: 16px;\r\n            padding-right: 40px;\r\n          }\r\n          .avatar {\r\n            margin-right: 20px;\r\n          }\r\n          .sub-info {\r\n            margin-bottom: 0;\r\n          }\r\n          .sub-info > span + span {\r\n            display: inline-block;\r\n            margin-left: 20px;\r\n            font-size: 12px;\r\n          }\r\n      `}</style>\r\n      </div>\r\n      {showDetail?<IssueDetail issue={issue} />:null}\r\n    </div>\r\n   )\r\n}\r\n\r\nfunction makeQuery(creator,state,labels){\r\n   let creatorStr=creator?`creator=${creator}`:''\r\n   let stateStr=state?`state=${state}`:''\r\n   let labelStr=''\r\n   if(labels&&labels.length>0){\r\n     labelStr=`labels=${labels.join(',')}`\r\n   }\r\n   const arr=[];\r\n   if(creatorStr) arr.push(creatorStr)\r\n   if(stateStr) arr.push(stateStr)\r\n   if(labelStr) arr.push(labelStr)\r\n    \r\n   return `?${arr.join('&')}`\r\n}\r\n\r\nconst Option=Select.Option\r\nfunction Issues ({owner,name,initialIssues,labels}){\r\n  console.log(initialIssues,labels)\r\n\r\n  const [creator,setCreator]=useState()\r\n  const [state,setState]=useState()\r\n  const [label,setLabel]=useState([])\r\n  const [issues,setIssues]=useState(initialIssues)\r\n\r\n  const handleCreatorChange=useCallback((value)=>{\r\n    setCreator(value)\r\n  },[])\r\n\r\n  const handleStateChange=useCallback((value)=>{\r\n    setState(value)\r\n  },[])\r\n\r\n  const handleLabelChange=useCallback((value)=>{\r\n    setLabel(value)\r\n  },[])\r\n\r\n  const handleSearch=()=>{\r\n    //search\r\n    api.request({\r\n      url:`/repos/${owner}/${name}/issues${makeQuery(creator,state,labels)}`\r\n    },ctx.req,ctx.res)\r\n    .then(resp=>setIssues(resp.data))\r\n  }\r\n\r\n  return (\r\n     <div className=\"root\">\r\n       <div className=\"search\">\r\n          <SearchUser onChange={handleCreatorChange} value={creator} />\r\n          <Select placeholder=\"状态\" onChange={handleStateChange} style={{width:200,marginLeft:20}} value={state}>\r\n              <Option value=\"all\">all</Option>\r\n              <Option value=\"open\">open</Option>\r\n              <Option value=\"closed\">closed</Option>\r\n          </Select>\r\n          <Select mode=\"multiple\" placeholder=\"Label\" onChange={handleLabelChange} style={{flexGrow:1,marginLeft:20,marginRight:20}} value={label}>\r\n              {\r\n                labels.map(la=><Option value={la.name} key={la.id}>{la.name}</Option>)\r\n              }\r\n          </Select>\r\n          <Button type=\"primary\" onClick={handleSearch}>搜索</Button>\r\n       </div>\r\n       <div className=\"issues\">\r\n          {issues.map(issue=><IssueItem issue={issue} key={issue.id} />)}\r\n       </div>\r\n       <style jsx>{`\r\n        .issues {\r\n          border: 1px solid #eee;\r\n          border-radius: 5px;\r\n          margin-bottom: 20px;\r\n          margin-top: 20px;\r\n        }\r\n        .search {\r\n          display: flex;\r\n        }\r\n        .loading {\r\n          height: 400px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n      `}</style>\r\n     </div>\r\n  )\r\n}\r\n\r\nIssues.getInitialProps=async({ctx})=>{\r\n  const {owner,name}=ctx.query\r\n  \r\n  //Promise.all可以让两个异步执行的操作并行执行 互不干扰\r\n  const fetchs=await Promise.all([\r\n    await api.request({\r\n      url:`/repos/${owner}/${name}/issues`\r\n    },ctx.req,ctx.res),\r\n    await api.request({\r\n      url:`/repos/${owner}/${name}/labels`\r\n    },ctx.req,ctx.res)\r\n  ])\r\n\r\n\r\n  return {\r\n    owner,\r\n    name,\r\n    initialIssues:fetchs[0].data,\r\n    labels:fetchs[1].data\r\n  }\r\n}\r\n\r\nexport default withRepoBasic(Issues,'issues')"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAgBA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAfA;AAAA;AAghBA;AAAA;AAqCA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AADA;AACA;AANA;AAAA;AAAA;AAAA;AASA;AADA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAJA;AAeA;AACA;AACA;AACA;AAJA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqBA;;;;A","sourceRoot":""}