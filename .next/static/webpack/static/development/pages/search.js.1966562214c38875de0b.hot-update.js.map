{"version":3,"file":"static/webpack/static\\development\\pages\\search.js.1966562214c38875de0b.hot-update.js","sources":["webpack:///./pages/search.js"],"sourcesContent":["import {useCallback,memo} from 'react'\r\nimport {withRouter} from 'next/router'\r\nimport {Row,Col,List} from 'antd'  //栅格\r\nimport Link from 'next/link'\r\nimport Router from 'next/router'\r\n\r\nimport api from '../lib/api'\r\n\r\n//搜索条件\r\nconst LANGUAGE=['JavaScript','HTML','CSS','TypeScript','Java','Rust']\r\nconst SORT_TYPES=[\r\n  {\r\n    name:'Best Match'\r\n  },\r\n  {\r\n    name:'Most Stars',\r\n    value:'stars',\r\n    order:'desc'\r\n  },\r\n  {\r\n    name:'Fewest Stars',\r\n    value:'stars',\r\n    order:'asc'\r\n  },\r\n  {\r\n    name:'Most Forks',\r\n    value:'forks',\r\n    order:'desc'\r\n  },\r\n  {\r\n    name:'Fewest Forks',\r\n    value:'forks',\r\n    order:'asc'\r\n  },\r\n]\r\n\r\n/**\r\n * sort：排序方式\r\n * order：排序顺序（升/降序）\r\n * lang：仓库的项目开发主语言\r\n * page：分页页面\r\n */\r\n\r\n const selectedItemStyle={\r\n   borderLeft:'2px solid #e36209',\r\n   fontWeight:100\r\n }\r\n\r\n const FilterLink=memo(({name,query,lang,sort,order})=>{\r\n    let queryString=`?query=${query}`\r\n    if(lang) queryString+=`&lang=${lang}`\r\n    if(sort) queryString+=`&sort=${sort}&order=${order||'desc'}`\r\n\r\n    return <Link href={`/search${queryString}`}><a>{name}</a></Link>\r\n })\r\nfunction Search({router,repos}){\r\n  console.log(repos)\r\n  \r\n  // const {sort,order,lang,query}=router.query\r\n  const {...querys}=router.query\r\n  const {sort,order,lang}=router.query\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n           <List \r\n             bordered\r\n             header={<span className=\"list-header\">语言</span>}\r\n             style={{marginBottom:20}}\r\n             dataSource={LANGUAGE}\r\n             renderItem={item=>{\r\n               const selected=lang===item\r\n               return (\r\n                 <List.Item style={selected?selectedItemStyle:null}>\r\n                   {selected?<span>{item}</span>:<FilterLink {...querys} lang={item} name={item}/>}\r\n                 </List.Item>\r\n               )\r\n             }}\r\n           />\r\n            <List \r\n             bordered\r\n             header={<span className=\"list-header\">排序</span>}\r\n             dataSource={SORT_TYPES}\r\n             renderItem={item=>{\r\n               let selected=false\r\n               if(item.name==='Best Match'&&!sort){\r\n                 selected=true\r\n               }else if(item.value===sort&&item.order===order){\r\n                 selected=true\r\n               }\r\n               return (\r\n                <List.Item style={selected?selectedItemStyle:null}>\r\n                  {selected?<span>{item.name}</span>:<FilterLink {...querys} sort={item.value} order={item.order} name={item.name}/>}\r\n                 </List.Item>\r\n               )\r\n             }}\r\n           />\r\n        </Col>\r\n      </Row>\r\n      <style jsx>{`\r\n        .root{\r\n          padding:20px 0;\r\n        }\r\n        .list-header{\r\n          font-weight:800;\r\n          font-size:16px;\r\n        }\r\n        `}</style>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nSearch.getInitialProps=async ({ctx})=>{\r\n  const {query,sort,order,lang,page}=ctx.query;\r\n  if(!query){\r\n    return {\r\n      repos:{\r\n        total_count:0\r\n      }\r\n    }\r\n  }\r\n  //?q=react+language:javascript&sort=stars&order=desc&page=2\r\n  let queryString=`?q=${query}`\r\n  if(lang) queryString+=`+language:${lang}`\r\n  if(sort) queryString+=`&sort=${sort}&order=${order||'desc'}`\r\n  if(page) queryString+=`&page=${page}`\r\n  //调用搜索列表接口\r\n  const result=await api.request({\r\n    url:`/search/repositories${queryString}`\r\n  },ctx.req,ctx.res)\r\n\r\n  return {\r\n    repos:result.data\r\n  }\r\n}\r\n\r\nexport default withRouter(Search)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AADA;AAIA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAZA;AAeA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAhBA;AAjBA;AAAA;AAiDA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AADA;AADA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;AAgBA;AADA;AACA;AAhBA;AAeA;AAfA;AAoBA;AADA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAuBA;;;;A","sourceRoot":""}