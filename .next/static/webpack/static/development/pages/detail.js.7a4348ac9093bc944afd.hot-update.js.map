{"version":3,"file":"static/webpack/static\\development\\pages\\detail.js.7a4348ac9093bc944afd.hot-update.js","sources":["webpack:///./components/with-repo-basic.jsx"],"sourcesContent":["\r\nimport Repo from './Repo'\r\nimport Link from 'next/link'\r\nimport { withRouter } from 'next/router'\r\nimport api from '../lib/api'\r\nimport { get, cache } from '../lib/repo-basic-cache'\r\n\r\nfunction makeQuery (queryObject) {\r\n  const query = Object.entries(queryObject)\r\n    .reduce((result, entry) => {\r\n      result.push(entry.join('='))\r\n      return result;\r\n    }, []).join('&')\r\n  return `?${query}`\r\n}\r\n\r\nconst isServer = typeof window === 'undefined'\r\nexport default function (Comp, type = 'index') {\r\n\r\n  function WithDetail ({ repoBasic, router, ...rest }) {\r\n    console.log(repoBasic, router)\r\n    const query1 = makeQuery(router.query)\r\n    return (\r\n      <div className=\"root\">\r\n        <div className=\"repo-basic\">\r\n          <Repo repo={repoBasic} />\r\n          <div className=\"tabs\">\r\n            {type === 'index' ? <span className=\"tab\">Readme</span> : <Link href={`/detail${query1}`}>\r\n              <a className=\"tab index\">Readme</a>\r\n            </Link>}\r\n            {type === 'issues' ? <span className=\"tab\">Issues</span> : <Link href={`/detail/issues${query1}`}>\r\n              <a className=\"tab issues\">Issues</a>\r\n            </Link>}\r\n          </div>\r\n        </div>\r\n        <div><Comp {...rest} /></div>\r\n        <style jsx>{`\r\n            .root {\r\n              padding-top: 20px;\r\n            }\r\n            .repo-basic {\r\n              padding: 20px;\r\n              border: 1px solid #eee;\r\n              margin-bottom: 20px;\r\n              border-radius: 5px;\r\n            }\r\n            .tab + .tab {\r\n              margin-left: 20px;\r\n            }\r\n          `}</style>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  WithDetail.getInitialProps = async (context) => {\r\n    const { router, ctx } = context\r\n    const { owner, name } = ctx.query\r\n\r\n    const full_name = `${owner}/${name}`\r\n\r\n    //可以调用公用布局之外其他组件的getInitialProps数据请求\r\n    let pageData = {}\r\n    if (Comp.getInitialProps) {\r\n      pageData = await Comp.getInitialProps(context)\r\n    }\r\n    //如果存储在cache里，就取缓存数据\r\n    if (get(full_name)) {\r\n      return {\r\n        repoBasic: get(full_name),\r\n        ...pageData\r\n      }\r\n    }\r\n    //若不在cache里，就重新获取数据，并将数据缓存\r\n    const repoBasic = await api.request({\r\n      url: `/repos/${owner}/${name}`\r\n    }, ctx.req, ctx.res)\r\n    //对数据缓存\r\n    cache(repoBasic.data)\r\n\r\n    return {\r\n      repoBasic: repoBasic.data,\r\n      ...pageData\r\n    }\r\n  }\r\n  return withRouter(WithDetail)\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAZA;AAAA;AA6BA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AASA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAcA;AAdA;AACA;AADA;AAAA;AAAA;AAoBA;AADA;AACA;AApBA;AAmBA;AAGA;AACA;AAvBA;AA0BA;AA1BA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA6BA;AACA;;;;A","sourceRoot":""}