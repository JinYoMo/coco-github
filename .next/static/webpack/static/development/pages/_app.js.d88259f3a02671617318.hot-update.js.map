{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.d88259f3a02671617318.hot-update.js","sources":["webpack:///./components/Layout.jsx"],"sourcesContent":["import { useState, useCallback } from 'react'\r\nimport getConfig from 'next/config'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'next/router'\r\nimport axios from 'axios'\r\n\r\nimport Link from 'next/link'\r\nimport { Button, Layout, Icon, Input, Avatar, Tooltip, Dropdown, Menu } from 'antd'\r\n\r\nimport { logout } from '../store/store'\r\n\r\nconst { Header, Content, Footer } = Layout\r\n\r\nimport Container from './Container'\r\n\r\nconst { publicRuntimeConfig } = getConfig()\r\n\r\n//style写在外边原因：githubIconStyle 保证对象为同一个 避免重新渲染\r\nconst githubIconStyle = {\r\n  color: 'white',\r\n  fontSize: 40,\r\n  display: 'block',\r\n  paddingTop: 10,\r\n  marginRight: 20,\r\n}\r\nconst footerStyle = {\r\n  textAlign: 'center'\r\n}\r\n\r\n// const Comp = ({ color, children, style }) => <div style={{ color, ...style }}>{children}</div>\r\n\r\nfunction MyLayout ({ children, user, logout, router }) {\r\n  const [search, setSearch] = useState('');\r\n  const handleSearchChange = useCallback((event) => {\r\n    setSearch(event.target.value)\r\n  }, [setSearch])\r\n  const handleOnSearch = useCallback(() => { }, [])\r\n  const handleLogout = useCallback(() => { logout() }, [logout])\r\n  const handleGoToOAuth = useCallback(e => {\r\n    e.preventDefault();  //取消默认跳转\r\n    axios.get(`prepare-auth?url=${router.asPath}`)\r\n      .then(resp => {\r\n        if (resp.status === 200) {\r\n          location.href = publicRuntimeConfig.OAUTH_URL\r\n        } else {\r\n          console.log('prepare auth failed', resp);\r\n        }\r\n      }).catch(err => {\r\n        console.log('prepare auth failed', err)\r\n      })\r\n  }, [])  //[]表示不依赖任何state和props的内容\r\n  const userDropDown = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <a onClick={handleLogout}>登出</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <Container renderer={<div className=\"header-inner\" />}>\r\n          <div className=\"header-left\">\r\n            <div className=\"logo\">\r\n              <link href=\"/\">\r\n                <Icon type=\"github\" style={githubIconStyle} />\r\n              </link>\r\n            </div>\r\n            <div>\r\n              <Input.Search placeholder=\"搜索仓库\" value={search} onChange={handleSearchChange} onSearch={handleOnSearch} />\r\n            </div>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <div className=\"user\">\r\n              {\r\n                user && user.id ? (\r\n                  <Dropdown overlay={userDropDown}>\r\n                    <a href='/' >\r\n                      <Avatar size={40} src={user.avatar_url} />\r\n                    </a>\r\n                  </Dropdown>\r\n                ) : (\r\n                    <Tooltip title=\"点击进行登录\">\r\n                      {/* 跳转github OAutn连接 使用prepare-auth该接口是保证在不同页面登录均维持该页面状态 相当于GET请求*/}\r\n                      <a href={`prepare-auth?url=${router.asPath}`} >\r\n                        <Avatar size={40} icon=\"user\" />\r\n                      </a>\r\n                    </Tooltip>\r\n                  )\r\n              }\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Header>\r\n      <Content>\r\n        <Container>{children}</Container>\r\n      </Content>\r\n      <Footer style={footerStyle}>\r\n        develop by JinYoMo@<a href=\"https://github.com/JinYoMo/coco-github\">coco-github</a>\r\n      </Footer>\r\n      <style jsx>{`\r\n         .header-inner{\r\n           display:flex;\r\n           justify-content:space-between; \r\n         }\r\n         .header-left{\r\n           display:flex;\r\n           justify-content:flex-start;\r\n         }\r\n      `}</style>\r\n      <style jsx global>{`\r\n        #__next{\r\n          height:100%;\r\n        }\r\n        .ant-layout{\r\n          min-height:100%;\r\n        }\r\n        .ant-layout-header{\r\n          padding-left:0;\r\n          padding-right:0;\r\n        }\r\n        .ant-layout-content{\r\n          background:#fff;\r\n        }\r\n      `}\r\n      </style>\r\n    </Layout>\r\n  )\r\n}\r\n//export default 必须是一个函数 connect返回的就是函数\r\nexport default connect(function mapState (state) {\r\n  return {\r\n    user: state.user\r\n  }\r\n}, function mapReducer (dispatch) {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n})(withRouter(MyLayout))"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAYA;AAAA;AACA;AAAA;AAAA;AAvCA;AAAA;AAAA;AAAA;AAqEA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AADA;AAGA;;;;A","sourceRoot":""}