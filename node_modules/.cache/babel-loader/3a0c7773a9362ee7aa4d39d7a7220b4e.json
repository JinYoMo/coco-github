{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Icon from \"antd/lib/icon\";\nimport _Button from \"antd/lib/button\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport getConfig from 'next/config';\nimport { connect } from 'react-redux';\n\nvar api = require('../lib/api');\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nfunction Index(_ref) {\n  var userRepos = _ref.userRepos,\n      userStaredRepos = _ref.userStaredRepos,\n      user = _ref.user;\n  console.log(userRepos, userStaredRepos, user);\n\n  if (!user || !user.id) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jsx-3888340167\" + \" \" + \"root\"\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"jsx-3888340167\"\n    }, \"\\u4EB2\\uFF0C\\u60A8\\u8FD8\\u6CA1\\u6709\\u767B\\u5F55\\u54E6~\"), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      href: publicRuntimeConfig.OAUTH_URL\n    }, \"\\u70B9\\u51FB\\u767B\\u5F55\"), /*#__PURE__*/React.createElement(_JSXStyle, {\n      id: \"3888340167\"\n    }, \".root.jsx-3888340167{height:400px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFzkuKrkurrpobnnm65cXGdpdEh1YumhueebrlxcY29jby1naXRodWJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFhbUIsQUFHdUIsYUFDQSwwRUFDUyw4RUFDQyxtR0FDSiw2RkFDcEIiLCJmaWxlIjoiRTpcXOS4quS6uumhueebrlxcZ2l0SHVi6aG555uuXFxjb2NvLWdpdGh1YlxccGFnZXNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCdXR0b24sSWNvbn0gZnJvbSAnYW50ZCcgXHJcbmltcG9ydCBnZXRDb25maWcgZnJvbSAnbmV4dC9jb25maWcnXHJcbmltcG9ydCB7Y29ubmVjdH0gZnJvbSAncmVhY3QtcmVkdXgnXHJcblxyXG5jb25zdCBhcGk9cmVxdWlyZSgnLi4vbGliL2FwaScpXHJcblxyXG5jb25zdCB7IHB1YmxpY1J1bnRpbWVDb25maWcgfSA9IGdldENvbmZpZygpXHJcbiBmdW5jdGlvbiBJbmRleCh7dXNlclJlcG9zLHVzZXJTdGFyZWRSZXBvcyx1c2VyfSl7XHJcbiAgY29uc29sZS5sb2codXNlclJlcG9zLHVzZXJTdGFyZWRSZXBvcyx1c2VyKVxyXG4gICBpZighdXNlcnx8IXVzZXIuaWQpe1xyXG4gICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cInJvb3RcIj5cclxuICAgICAgIDxwPuS6su+8jOaCqOi/mOayoeacieeZu+W9leWTpn48L3A+XHJcbiAgICAgICA8QnV0dG9uIHR5cGU9XCJwcmltYXJ5XCIgaHJlZj17cHVibGljUnVudGltZUNvbmZpZy5PQVVUSF9VUkx9PueCueWHu+eZu+W9lTwvQnV0dG9uPlxyXG4gICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgIC5yb290e1xyXG4gICAgICAgICAgaGVpZ2h0OjQwMHB4O1xyXG4gICAgICAgICAgZGlzcGxheTpmbGV4O1xyXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246Y29sdW1uO1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxuICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgPC9kaXY+XHJcbiAgIH1cclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm9vdFwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyLWluZm9cIj5cclxuICAgICAgICAgICAgICA8aW1nIHNyYz17dXNlci5hdmF0YXJfdXJsfSBhbHQ9XCJ1c2VyIGF2YXRhclwiIGNsYXNzTmFtZT1cImF2YXRhclwiIC8+XHJcbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibG9naW5cIj57dXNlci5sb2dpbn08L3NwYW4+XHJcbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPnt1c2VyLm5hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImJpb1wiPnt1c2VyLmJpb308L3NwYW4+XHJcbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiZW1haWxcIj5cclxuICAgICAgICAgICAgICAgICAgPEljb24gdHlwZT1cImVtYWlsXCIgc3R5bGU9e3ttYXJnaW5SaWdodDoxMH19PjwvSWNvbj5cclxuICAgICAgICAgICAgICAgICAgPGEgaHJlZj17YG1haWx0bzoke3VzZXIuZW1haWx9YH0+PC9hPlxyXG4gICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIClcclxuIH1cclxuIC8v5pyN5Yqh56uv5ZKM5a6i5oi356uv6YO95Lya5omn6KGMXHJcbiAvKipcclxuICAqIOWuouaIt+err+WIh+aNouS4juiuv+mXrkluZGV46aG16Z2i5pyN5Yqh56uv5riy5p+T6YO95Lya5omn6KGMZ2V0SW5pdGlhbFByb3BzXHJcbiAgKiDlnKjmnI3liqHnq6/muLLmn5PnmoTml7blgJnvvIzov5DooYznjq/looPmmK/lpITkuo5ub2RlanPnjq/looPvvIzogIzkuI3mmK/lpITkuo7mtY/op4jlmajnmoTnjq/looNcclxuICAqIOWcqG5vZGVqc+eOr+Wig+S4rWF4aW9zLmdldCgnL2dpdGh1Yi9zZWFyY2gvcmVwb3NpdG9yaWVzP3E9cmVhY3QnKeaWueW8j+ivt+axgu+8jOS8muivt+axgidodHRwOi8vbG9jYWxob3N0OjgwL2dpdGh1Yi9zZWFyY2gvcmVwb3NpdG9yaWVzP3E9cmVhY3Qn5Zyw5Z2A77yM6L+Z5Liq5Zyw5Z2A5piO5pi+6K+35rGC5LiN5oiQ5YqfXHJcbiAgKiDop6PlhrPnmoTmlrnlvI/mmK/or7fmsYJhcGnml7bliKTmlq3mmK/lkKbkuLrmnI3liqHnq6/vvIzmj5Dlj5blh7rlhazlhbHnmoRsaWIvYXBpLmpzXHJcbiAgKiDlrqLmiLfnq6/nmoTor7fmsYLkvJrliLBzZXJ2ZXIvYXBpLmpz5Lit5YGa5aSE55CG77yM6L+U5Zue57uZ5a6i5oi356uvXHJcbiAgKiDku6XkuIrlsLHmmK/lkIzmnoTnmoTmpoLlv7XigJTigJTlsLHmmK/mnInpg6jliIbku6PnoIHpg73lj6/og73kvJrlnKjlrqLmiLfnq6/lkozmnI3liqHnq6/miafooYzvvIzlm6DmraTov5nmrrXku6PnoIHlsLHopoHpgILlupTmtY/op4jlmajnmoTmiafooYznjq/looPvvIzkuZ/opoHpgILlupRub2RlanPnmoTmiafooYznjq/looPvvIzlm6DmraTlgZrljLrliIblpITnkIbvvIzmnIDnu4jmsYfpm4bliLDkuIDkuKrngrlyZXF1ZXN0R2l0aHVi5LiK6Z2i77yM5L+d6K+B5Zyo5a6i5oi356uv5ZKM5pyN5Yqh56uv6YO95Y+v5q2j5bi45omn6KGMXHJcbiAgKi9cclxuIEluZGV4LmdldEluaXRpYWxQcm9wcz1hc3luYyAoe2N0eCxyZWR1eFN0b3JlfSk9PntcclxuICAvLyAgY29uc3QgcmVzdWx0PWF3YWl0IGF4aW9zXHJcbiAgLy8gIC5nZXQoJy9naXRodWIvc2VhcmNoL3JlcG9zaXRvcmllcz9xPXJlYWN0JylcclxuICAvLyAgLnRoZW4ocmVzcD0+Y29uc29sZS5sb2cocmVzcCkpXHJcbiAgY29uc3QgdXNlcj1yZWR1eFN0b3JlLmdldFN0YXRlKCkudXNlcjsgLy/mi7/liLDnlKjmiLfkv6Hmga9cclxuICBpZighdXNlcnx8IXVzZXIuaWQpe1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaXNMb2dpbjpmYWxzZVxyXG4gICAgfVxyXG4gIH1cclxuICAvL2N0eC5yZXEsY3R4LnJlc+WPquacieWcqOacjeWKoeerr+a4suafk+aXtuaJjeS8muaciVxyXG4gIC8v6LCD55So5b2T5YmN55So5oi355qE5LuT5bqT5YiX6KGoXHJcbiAgY29uc3QgdXNlclJlcG9zPSBhd2FpdCBhcGkucmVxdWVzdChcclxuICAgIHtcclxuICAgICAgdXJsOiAnL3VzZXIvcmVwb3MnLFxyXG4gICAgfSxcclxuICAgIGN0eC5yZXEsXHJcbiAgICBjdHgucmVzLFxyXG4gIClcclxuICAvL+iwg+eUqOWFs+azqOeahOS7k+W6k+WIl+ihqFxyXG4gIGNvbnN0IHVzZXJTdGFyZWRSZXBvcz0gYXdhaXQgYXBpLnJlcXVlc3QoXHJcbiAgICB7XHJcbiAgICAgIHVybDogJy91c2VyL3N0YXJyZWQnLFxyXG4gICAgfSxcclxuICAgIGN0eC5yZXEsXHJcbiAgICBjdHgucmVzLFxyXG4gIClcclxuICAgcmV0dXJuIHtcclxuICAgICBpc0xvZ2luOnRydWUsXHJcbiAgICAgdXNlclJlcG9zOnVzZXJSZXBvcy5kYXRhLFxyXG4gICAgIHVzZXJTdGFyZWRSZXBvczp1c2VyU3RhcmVkUmVwb3MuZGF0YVxyXG4gICB9XHJcbiB9XHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoZnVuY3Rpb24gbWFwU3RhdGUoc3RhdGUpe1xyXG4gICByZXR1cm4ge1xyXG4gICAgIHVzZXI6c3RhdGUudXNlclxyXG4gICB9XHJcbn0pKEluZGV4KSJdfQ== */\\n/*@ sourceURL=E:\\\\\\u4E2A\\u4EBA\\u9879\\u76EE\\\\gitHub\\u9879\\u76EE\\\\coco-github\\\\pages\\\\index.js */\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info\"\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.avatar_url,\n    alt: \"user avatar\",\n    className: \"avatar\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"login\"\n  }, user.login), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"name\"\n  }, user.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bio\"\n  }, user.bio), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"email\"\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    type: \"email\",\n    style: {\n      marginRight: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"mailto:\".concat(user.email)\n  }))));\n} //服务端和客户端都会执行\n\n/**\r\n * 客户端切换与访问Index页面服务端渲染都会执行getInitialProps\r\n * 在服务端渲染的时候，运行环境是处于nodejs环境，而不是处于浏览器的环境\r\n * 在nodejs环境中axios.get('/github/search/repositories?q=react')方式请求，会请求'http://localhost:80/github/search/repositories?q=react'地址，这个地址明显请求不成功\r\n * 解决的方式是请求api时判断是否为服务端，提取出公共的lib/api.js\r\n * 客户端的请求会到server/api.js中做处理，返回给客户端\r\n * 以上就是同构的概念——就是有部分代码都可能会在客户端和服务端执行，因此这段代码就要适应浏览器的执行环境，也要适应nodejs的执行环境，因此做区分处理，最终汇集到一个点requestGithub上面，保证在客户端和服务端都可正常执行\r\n */\n\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, reduxStore, user, userRepos, userStaredRepos;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx, reduxStore = _ref2.reduxStore;\n            //  const result=await axios\n            //  .get('/github/search/repositories?q=react')\n            //  .then(resp=>console.log(resp))\n            user = reduxStore.getState().user; //拿到用户信息\n\n            if (!(!user || !user.id)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              isLogin: false\n            });\n\n          case 4:\n            _context.next = 6;\n            return api.request({\n              url: '/user/repos'\n            }, ctx.req, ctx.res);\n\n          case 6:\n            userRepos = _context.sent;\n            _context.next = 9;\n            return api.request({\n              url: '/user/starred'\n            }, ctx.req, ctx.res);\n\n          case 9:\n            userStaredRepos = _context.sent;\n            return _context.abrupt(\"return\", {\n              isLogin: true,\n              userRepos: userRepos.data,\n              userStaredRepos: userStaredRepos.data\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default connect(function mapState(state) {\n  return {\n    user: state.user\n  };\n})(Index);","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/index.js"],"names":["getConfig","connect","api","require","publicRuntimeConfig","Index","userRepos","userStaredRepos","user","console","log","id","OAUTH_URL","avatar_url","login","name","bio","marginRight","email","getInitialProps","ctx","reduxStore","getState","isLogin","request","url","req","res","data","mapState","state"],"mappings":"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","sourcesContent":["import {Button,Icon} from 'antd' \r\nimport getConfig from 'next/config'\r\nimport {connect} from 'react-redux'\r\n\r\nconst api=require('../lib/api')\r\n\r\nconst { publicRuntimeConfig } = getConfig()\r\n function Index({userRepos,userStaredRepos,user}){\r\n  console.log(userRepos,userStaredRepos,user)\r\n   if(!user||!user.id){\r\n     return <div className=\"root\">\r\n       <p>亲，您还没有登录哦~</p>\r\n       <Button type=\"primary\" href={publicRuntimeConfig.OAUTH_URL}>点击登录</Button>\r\n       <style jsx>{`\r\n        .root{\r\n          height:400px;\r\n          display:flex;\r\n          flex-direction:column;\r\n          justify-content:center;\r\n          align-items:center;\r\n        }\r\n       `}</style>\r\n     </div>\r\n   }\r\n    return (\r\n      <div className=\"root\">\r\n          <div className=\"user-info\">\r\n              <img src={user.avatar_url} alt=\"user avatar\" className=\"avatar\" />\r\n              <span className=\"login\">{user.login}</span>\r\n              <span className=\"name\">{user.name}</span>\r\n              <span className=\"bio\">{user.bio}</span>\r\n              <p className=\"email\">\r\n                  <Icon type=\"email\" style={{marginRight:10}}></Icon>\r\n                  <a href={`mailto:${user.email}`}></a>\r\n              </p>\r\n          </div>\r\n      </div>\r\n    )\r\n }\r\n //服务端和客户端都会执行\r\n /**\r\n  * 客户端切换与访问Index页面服务端渲染都会执行getInitialProps\r\n  * 在服务端渲染的时候，运行环境是处于nodejs环境，而不是处于浏览器的环境\r\n  * 在nodejs环境中axios.get('/github/search/repositories?q=react')方式请求，会请求'http://localhost:80/github/search/repositories?q=react'地址，这个地址明显请求不成功\r\n  * 解决的方式是请求api时判断是否为服务端，提取出公共的lib/api.js\r\n  * 客户端的请求会到server/api.js中做处理，返回给客户端\r\n  * 以上就是同构的概念——就是有部分代码都可能会在客户端和服务端执行，因此这段代码就要适应浏览器的执行环境，也要适应nodejs的执行环境，因此做区分处理，最终汇集到一个点requestGithub上面，保证在客户端和服务端都可正常执行\r\n  */\r\n Index.getInitialProps=async ({ctx,reduxStore})=>{\r\n  //  const result=await axios\r\n  //  .get('/github/search/repositories?q=react')\r\n  //  .then(resp=>console.log(resp))\r\n  const user=reduxStore.getState().user; //拿到用户信息\r\n  if(!user||!user.id){\r\n    return {\r\n      isLogin:false\r\n    }\r\n  }\r\n  //ctx.req,ctx.res只有在服务端渲染时才会有\r\n  //调用当前用户的仓库列表\r\n  const userRepos= await api.request(\r\n    {\r\n      url: '/user/repos',\r\n    },\r\n    ctx.req,\r\n    ctx.res,\r\n  )\r\n  //调用关注的仓库列表\r\n  const userStaredRepos= await api.request(\r\n    {\r\n      url: '/user/starred',\r\n    },\r\n    ctx.req,\r\n    ctx.res,\r\n  )\r\n   return {\r\n     isLogin:true,\r\n     userRepos:userRepos.data,\r\n     userStaredRepos:userStaredRepos.data\r\n   }\r\n }\r\nexport default connect(function mapState(state){\r\n   return {\r\n     user:state.user\r\n   }\r\n})(Index)"]},"metadata":{},"sourceType":"module"}