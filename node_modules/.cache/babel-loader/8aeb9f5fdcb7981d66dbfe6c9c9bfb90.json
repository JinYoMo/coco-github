{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App, { Container } from 'next/app';\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport MyContext from '../lib/my-context';\nimport Layout from '../components/Layout';\nimport store from '../store/store';\nimport testHoc from '../lib/test-hoc'; //nextjs自定义App\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      context: \"value\"\n    });\n\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(Provider, {\n        store: store\n      }, /*#__PURE__*/React.createElement(MyContext.Provider, {\n        value: this.state.context\n      }, /*#__PURE__*/React.createElement(Component, pageProps), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            context: \"\".concat(_this2.state.context, \"111\")\n          });\n        }\n      }, \"update context\")))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n\n    /** \r\n     * 1.自定义getInitialProps进行全局性的数据获取 \r\n     * 2.手动判断渲染页面是否有getInitialProps，如果有要去执行并获取到它的数据\r\n     * 3.每一次页面切换都会调用\r\n    */\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                //给页面传递特定的props\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default testHoc(MyApp);","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/_app.js"],"names":["App","Container","Provider","MyContext","Layout","store","testHoc","MyApp","context","props","Component","pageProps","state","setState","ctx","getInitialProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,IAAYC,SAAZ,QAA4B,UAA5B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,OAAO,oBAAP;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CAEA;;IACMC,K;;;;;;;;;;;;;;;;4DACE;AACJC,MAAAA,OAAO,EAAC;AADJ,K;;;;;;;6BAoBE;AAAA;;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACWC,SADX,eACWA,SADX;AAEN,0BACE,oBAAC,SAAD,qBACE,oBAAC,MAAD,qBACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEN;AAAjB,sBACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,KAAK,EAAE,KAAKO,KAAL,CAAWJ;AAAtC,sBACE,oBAAC,SAAD,EAAeG,SAAf,CADF,eAEE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACE,QAAL,CAAc;AAACL,YAAAA,OAAO,YAAI,MAAI,CAACI,KAAL,CAAWJ,OAAf;AAAR,WAAd,CAAJ;AAAA;AAAjB,0BAFF,CADF,CADF,CADF,CADF;AAYD;;;;AA9BD;AACF;AACA;AACA;AACA;;;;;;;;AACgCE,gBAAAA,S,QAAAA,S,EAAUI,G,QAAAA,G;AACtC;AACIH,gBAAAA,S,GAAU,E;;qBACXD,SAAS,CAACK,e;;;;;;uBACKL,SAAS,CAACK,eAAV,CAA0BD,GAA1B,C;;;AAAhBH,gBAAAA,S;;;iDAEI;AACJA,kBAAAA,SAAS,EAATA;AADI,iB;;;;;;;;;;;;;;;;;;;EAhBUX,G;;AAqCpB,eAAeM,OAAO,CAACC,KAAD,CAAtB","sourcesContent":["import App,{Container} from 'next/app'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport 'antd/dist/antd.css'\r\n\r\nimport MyContext from '../lib/my-context'\r\nimport Layout from '../components/Layout'\r\n\r\nimport store from '../store/store'\r\nimport testHoc from '../lib/test-hoc'\r\n\r\n//nextjs自定义App\r\nclass MyApp extends App {\r\n  state={\r\n    context:\"value\"\r\n  }\r\n\r\n  /** \r\n   * 1.自定义getInitialProps进行全局性的数据获取 \r\n   * 2.手动判断渲染页面是否有getInitialProps，如果有要去执行并获取到它的数据\r\n   * 3.每一次页面切换都会调用\r\n  */\r\n  static async getInitialProps({Component,ctx}){\r\n    //给页面传递特定的props\r\n    let pageProps={}\r\n    if(Component.getInitialProps){\r\n      pageProps=await Component.getInitialProps(ctx);\r\n    }\r\n    return{\r\n      pageProps\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {Component,pageProps}=this.props\r\n    return(\r\n      <Container>\r\n        <Layout>\r\n          <Provider store={store}>\r\n            <MyContext.Provider value={this.state.context}>\r\n              <Component {...pageProps}/>\r\n              <button onClick={()=>this.setState({context:`${this.state.context}111`})}>update context</button>\r\n            </MyContext.Provider>\r\n          </Provider>\r\n        </Layout>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default testHoc(MyApp)"]},"metadata":{},"sourceType":"module"}