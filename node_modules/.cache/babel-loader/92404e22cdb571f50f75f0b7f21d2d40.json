{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Button from \"antd/lib/button\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { divide } from 'lodash';\nimport getConfig from 'next/config';\nimport { connect } from 'react-redux';\n\nvar api = require('../lib/api');\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nfunction Index(_ref) {\n  var userRepos = _ref.userRepos,\n      userStaredRepos = _ref.userStaredRepos,\n      user = _ref.user;\n\n  if (!user || !user.id) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jsx-3888340167\" + \" \" + \"root\"\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"jsx-3888340167\"\n    }, \"\\u4EB2\\uFF0C\\u60A8\\u8FD8\\u6CA1\\u6709\\u767B\\u5F55\\u54E6~\"), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      href: publicRuntimeConfig.OAUTH_URL\n    }, \"\\u70B9\\u51FB\\u767B\\u5F55\"), /*#__PURE__*/React.createElement(_JSXStyle, {\n      id: \"3888340167\"\n    }, \".root.jsx-3888340167{height:400px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFzkuKrkurrpobnnm65cXGdpdEh1YumhueebrlxcY29jby1naXRodWJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFjbUIsQUFHdUIsYUFDQSwwRUFDUyw4RUFDQyxtR0FDSiw2RkFDcEIiLCJmaWxlIjoiRTpcXOS4quS6uumhueebrlxcZ2l0SHVi6aG555uuXFxjb2NvLWdpdGh1YlxccGFnZXNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGl2aWRlIH0gZnJvbSAnbG9kYXNoJ1xyXG5cclxuaW1wb3J0IHtCdXR0b259IGZyb20gJ2FudGQnIFxyXG5pbXBvcnQgZ2V0Q29uZmlnIGZyb20gJ25leHQvY29uZmlnJ1xyXG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG5cclxuY29uc3QgYXBpPXJlcXVpcmUoJy4uL2xpYi9hcGknKVxyXG5cclxuY29uc3QgeyBwdWJsaWNSdW50aW1lQ29uZmlnIH0gPSBnZXRDb25maWcoKVxyXG4gZnVuY3Rpb24gSW5kZXgoe3VzZXJSZXBvcyx1c2VyU3RhcmVkUmVwb3MsdXNlcn0pe1xyXG4gICBpZighdXNlcnx8IXVzZXIuaWQpe1xyXG4gICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cInJvb3RcIj5cclxuICAgICAgIDxwPuS6su+8jOaCqOi/mOayoeacieeZu+W9leWTpn48L3A+XHJcbiAgICAgICA8QnV0dG9uIHR5cGU9XCJwcmltYXJ5XCIgaHJlZj17cHVibGljUnVudGltZUNvbmZpZy5PQVVUSF9VUkx9PueCueWHu+eZu+W9lTwvQnV0dG9uPlxyXG4gICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgIC5yb290e1xyXG4gICAgICAgICAgaGVpZ2h0OjQwMHB4O1xyXG4gICAgICAgICAgZGlzcGxheTpmbGV4O1xyXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246Y29sdW1uO1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxuICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgPC9kaXY+XHJcbiAgIH1cclxuICAgY29uc29sZS5sb2codXNlclJlcG9zLHVzZXJTdGFyZWRSZXBvcyx1c2VyKVxyXG4gICAgcmV0dXJuIDxzcGFuPkluZGV4PC9zcGFuPlxyXG4gfVxyXG4gLy/mnI3liqHnq6/lkozlrqLmiLfnq6/pg73kvJrmiafooYxcclxuIC8qKlxyXG4gICog5a6i5oi356uv5YiH5o2i5LiO6K6/6ZeuSW5kZXjpobXpnaLmnI3liqHnq6/muLLmn5Ppg73kvJrmiafooYxnZXRJbml0aWFsUHJvcHNcclxuICAqIOWcqOacjeWKoeerr+a4suafk+eahOaXtuWAme+8jOi/kOihjOeOr+Wig+aYr+WkhOS6jm5vZGVqc+eOr+Wig++8jOiAjOS4jeaYr+WkhOS6jua1j+iniOWZqOeahOeOr+Wig1xyXG4gICog5Zyobm9kZWpz546v5aKD5LitYXhpb3MuZ2V0KCcvZ2l0aHViL3NlYXJjaC9yZXBvc2l0b3JpZXM/cT1yZWFjdCcp5pa55byP6K+35rGC77yM5Lya6K+35rGCJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAvZ2l0aHViL3NlYXJjaC9yZXBvc2l0b3JpZXM/cT1yZWFjdCflnLDlnYDvvIzov5nkuKrlnLDlnYDmmI7mmL7or7fmsYLkuI3miJDlip9cclxuICAqIOino+WGs+eahOaWueW8j+aYr+ivt+axgmFwaeaXtuWIpOaWreaYr+WQpuS4uuacjeWKoeerr++8jOaPkOWPluWHuuWFrOWFseeahGxpYi9hcGkuanNcclxuICAqIOWuouaIt+err+eahOivt+axguS8muWIsHNlcnZlci9hcGkuanPkuK3lgZrlpITnkIbvvIzov5Tlm57nu5nlrqLmiLfnq69cclxuICAqIOS7peS4iuWwseaYr+WQjOaehOeahOamguW/teKAlOKAlOWwseaYr+aciemDqOWIhuS7o+eggemDveWPr+iDveS8muWcqOWuouaIt+err+WSjOacjeWKoeerr+aJp+ihjO+8jOWboOatpOi/meauteS7o+eggeWwseimgemAguW6lOa1j+iniOWZqOeahOaJp+ihjOeOr+Wig++8jOS5n+imgemAguW6lG5vZGVqc+eahOaJp+ihjOeOr+Wig++8jOWboOatpOWBmuWMuuWIhuWkhOeQhu+8jOacgOe7iOaxh+mbhuWIsOS4gOS4queCuXJlcXVlc3RHaXRodWLkuIrpnaLvvIzkv53or4HlnKjlrqLmiLfnq6/lkozmnI3liqHnq6/pg73lj6/mraPluLjmiafooYxcclxuICAqL1xyXG4gSW5kZXguZ2V0SW5pdGlhbFByb3BzPWFzeW5jICh7Y3R4LHJlZHV4U3RvcmV9KT0+e1xyXG4gIC8vICBjb25zdCByZXN1bHQ9YXdhaXQgYXhpb3NcclxuICAvLyAgLmdldCgnL2dpdGh1Yi9zZWFyY2gvcmVwb3NpdG9yaWVzP3E9cmVhY3QnKVxyXG4gIC8vICAudGhlbihyZXNwPT5jb25zb2xlLmxvZyhyZXNwKSlcclxuICBjb25zdCB1c2VyPXJlZHV4U3RvcmUuZ2V0U3RhdGUoKS51c2VyOyAvL+aLv+WIsOeUqOaIt+S/oeaBr1xyXG4gIGlmKCF1c2VyfHwhdXNlci5pZCl7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBpc0xvZ2luOmZhbHNlXHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vY3R4LnJlcSxjdHgucmVz5Y+q5pyJ5Zyo5pyN5Yqh56uv5riy5p+T5pe25omN5Lya5pyJXHJcbiAgLy/osIPnlKjlvZPliY3nlKjmiLfnmoTku5PlupPliJfooahcclxuICBjb25zdCB1c2VyUmVwb3M9IGF3YWl0IGFwaS5yZXF1ZXN0KFxyXG4gICAge1xyXG4gICAgICB1cmw6ICcvdXNlci9yZXBvcycsXHJcbiAgICB9LFxyXG4gICAgY3R4LnJlcSxcclxuICAgIGN0eC5yZXMsXHJcbiAgKVxyXG4gIC8v6LCD55So5YWz5rOo55qE5LuT5bqT5YiX6KGoXHJcbiAgY29uc3QgdXNlclN0YXJlZFJlcG9zPSBhd2FpdCBhcGkucmVxdWVzdChcclxuICAgIHtcclxuICAgICAgdXJsOiAnL3VzZXIvc3RhcnJlZCcsXHJcbiAgICB9LFxyXG4gICAgY3R4LnJlcSxcclxuICAgIGN0eC5yZXMsXHJcbiAgKVxyXG4gICByZXR1cm4ge1xyXG4gICAgIGlzTG9naW46dHJ1ZSxcclxuICAgICB1c2VyUmVwb3M6dXNlclJlcG9zLmRhdGEsXHJcbiAgICAgdXNlclN0YXJlZFJlcG9zOnVzZXJTdGFyZWRSZXBvcy5kYXRhXHJcbiAgIH1cclxuIH1cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChmdW5jdGlvbiBtYXBTdGF0ZShzdGF0ZSl7XHJcbiAgIHJldHVybiB7XHJcbiAgICAgdXNlcjpzdGF0ZS51c2VyXHJcbiAgIH1cclxufSkoSW5kZXgpIl19 */\\n/*@ sourceURL=E:\\\\\\u4E2A\\u4EBA\\u9879\\u76EE\\\\gitHub\\u9879\\u76EE\\\\coco-github\\\\pages\\\\index.js */\"));\n  }\n\n  console.log(userRepos, userStaredRepos, user);\n  return /*#__PURE__*/React.createElement(\"span\", null, \"Index\");\n} //服务端和客户端都会执行\n\n/**\r\n * 客户端切换与访问Index页面服务端渲染都会执行getInitialProps\r\n * 在服务端渲染的时候，运行环境是处于nodejs环境，而不是处于浏览器的环境\r\n * 在nodejs环境中axios.get('/github/search/repositories?q=react')方式请求，会请求'http://localhost:80/github/search/repositories?q=react'地址，这个地址明显请求不成功\r\n * 解决的方式是请求api时判断是否为服务端，提取出公共的lib/api.js\r\n * 客户端的请求会到server/api.js中做处理，返回给客户端\r\n * 以上就是同构的概念——就是有部分代码都可能会在客户端和服务端执行，因此这段代码就要适应浏览器的执行环境，也要适应nodejs的执行环境，因此做区分处理，最终汇集到一个点requestGithub上面，保证在客户端和服务端都可正常执行\r\n */\n\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, reduxStore, user, userRepos, userStaredRepos;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx, reduxStore = _ref2.reduxStore;\n            //  const result=await axios\n            //  .get('/github/search/repositories?q=react')\n            //  .then(resp=>console.log(resp))\n            user = reduxStore.getState().user; //拿到用户信息\n\n            if (!(!user || !user.id)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              isLogin: false\n            });\n\n          case 4:\n            _context.next = 6;\n            return api.request({\n              url: '/user/repos'\n            }, ctx.req, ctx.res);\n\n          case 6:\n            userRepos = _context.sent;\n            _context.next = 9;\n            return api.request({\n              url: '/user/starred'\n            }, ctx.req, ctx.res);\n\n          case 9:\n            userStaredRepos = _context.sent;\n            return _context.abrupt(\"return\", {\n              isLogin: true,\n              userRepos: userRepos.data,\n              userStaredRepos: userStaredRepos.data\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default connect(function mapState(state) {\n  return {\n    user: state.user\n  };\n})(Index);","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/index.js"],"names":["divide","getConfig","connect","api","require","publicRuntimeConfig","Index","userRepos","userStaredRepos","user","id","OAUTH_URL","console","log","getInitialProps","ctx","reduxStore","getState","isLogin","request","url","req","res","data","mapState","state"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAMC,GAAG,GAACC,OAAO,CAAC,YAAD,CAAjB;;iBAEgCH,SAAS,E;IAAjCI,mB,cAAAA,mB;;AACP,SAASC,KAAT,OAAgD;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AAAA,MAANC,IAAM,QAANA,IAAM;;AAC9C,MAAG,CAACA,IAAD,IAAO,CAACA,IAAI,CAACC,EAAhB,EAAmB;AACjB,wBAAO;AAAA,0CAAe;AAAf,oBACL;AAAA;AAAA,iEADK,eAEL;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,IAAI,EAAEL,mBAAmB,CAACM;AAAjD,kCAFK;AAAA;AAAA,g8IAAP;AAaD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ,EAAsBC,eAAtB,EAAsCC,IAAtC;AACC,sBAAO,0CAAP;AACF,C,CACD;;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCH,KAAK,CAACQ,eAAN;AAAA,uEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,YAAAA,GAAR,SAAQA,GAAR,EAAYC,UAAZ,SAAYA,UAAZ;AACrB;AACA;AACA;AACMP,YAAAA,IAJe,GAIVO,UAAU,CAACC,QAAX,GAAsBR,IAJZ,EAIkB;;AAJlB,kBAKlB,CAACA,IAAD,IAAO,CAACA,IAAI,CAACC,EALK;AAAA;AAAA;AAAA;;AAAA,6CAMZ;AACLQ,cAAAA,OAAO,EAAC;AADH,aANY;;AAAA;AAAA;AAAA,mBAYEf,GAAG,CAACgB,OAAJ,CACrB;AACEC,cAAAA,GAAG,EAAE;AADP,aADqB,EAIrBL,GAAG,CAACM,GAJiB,EAKrBN,GAAG,CAACO,GALiB,CAZF;;AAAA;AAYff,YAAAA,SAZe;AAAA;AAAA,mBAoBQJ,GAAG,CAACgB,OAAJ,CAC3B;AACEC,cAAAA,GAAG,EAAE;AADP,aAD2B,EAI3BL,GAAG,CAACM,GAJuB,EAK3BN,GAAG,CAACO,GALuB,CApBR;;AAAA;AAoBfd,YAAAA,eApBe;AAAA,6CA2Bb;AACLU,cAAAA,OAAO,EAAC,IADH;AAELX,cAAAA,SAAS,EAACA,SAAS,CAACgB,IAFf;AAGLf,cAAAA,eAAe,EAACA,eAAe,CAACe;AAH3B,aA3Ba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;;AAiCD,eAAerB,OAAO,CAAC,SAASsB,QAAT,CAAkBC,KAAlB,EAAwB;AAC5C,SAAO;AACLhB,IAAAA,IAAI,EAACgB,KAAK,CAAChB;AADN,GAAP;AAGF,CAJqB,CAAP,CAIZH,KAJY,CAAf","sourcesContent":["import { divide } from 'lodash'\r\n\r\nimport {Button} from 'antd' \r\nimport getConfig from 'next/config'\r\nimport {connect} from 'react-redux'\r\n\r\nconst api=require('../lib/api')\r\n\r\nconst { publicRuntimeConfig } = getConfig()\r\n function Index({userRepos,userStaredRepos,user}){\r\n   if(!user||!user.id){\r\n     return <div className=\"root\">\r\n       <p>亲，您还没有登录哦~</p>\r\n       <Button type=\"primary\" href={publicRuntimeConfig.OAUTH_URL}>点击登录</Button>\r\n       <style jsx>{`\r\n        .root{\r\n          height:400px;\r\n          display:flex;\r\n          flex-direction:column;\r\n          justify-content:center;\r\n          align-items:center;\r\n        }\r\n       `}</style>\r\n     </div>\r\n   }\r\n   console.log(userRepos,userStaredRepos,user)\r\n    return <span>Index</span>\r\n }\r\n //服务端和客户端都会执行\r\n /**\r\n  * 客户端切换与访问Index页面服务端渲染都会执行getInitialProps\r\n  * 在服务端渲染的时候，运行环境是处于nodejs环境，而不是处于浏览器的环境\r\n  * 在nodejs环境中axios.get('/github/search/repositories?q=react')方式请求，会请求'http://localhost:80/github/search/repositories?q=react'地址，这个地址明显请求不成功\r\n  * 解决的方式是请求api时判断是否为服务端，提取出公共的lib/api.js\r\n  * 客户端的请求会到server/api.js中做处理，返回给客户端\r\n  * 以上就是同构的概念——就是有部分代码都可能会在客户端和服务端执行，因此这段代码就要适应浏览器的执行环境，也要适应nodejs的执行环境，因此做区分处理，最终汇集到一个点requestGithub上面，保证在客户端和服务端都可正常执行\r\n  */\r\n Index.getInitialProps=async ({ctx,reduxStore})=>{\r\n  //  const result=await axios\r\n  //  .get('/github/search/repositories?q=react')\r\n  //  .then(resp=>console.log(resp))\r\n  const user=reduxStore.getState().user; //拿到用户信息\r\n  if(!user||!user.id){\r\n    return {\r\n      isLogin:false\r\n    }\r\n  }\r\n  //ctx.req,ctx.res只有在服务端渲染时才会有\r\n  //调用当前用户的仓库列表\r\n  const userRepos= await api.request(\r\n    {\r\n      url: '/user/repos',\r\n    },\r\n    ctx.req,\r\n    ctx.res,\r\n  )\r\n  //调用关注的仓库列表\r\n  const userStaredRepos= await api.request(\r\n    {\r\n      url: '/user/starred',\r\n    },\r\n    ctx.req,\r\n    ctx.res,\r\n  )\r\n   return {\r\n     isLogin:true,\r\n     userRepos:userRepos.data,\r\n     userStaredRepos:userStaredRepos.data\r\n   }\r\n }\r\nexport default connect(function mapState(state){\r\n   return {\r\n     user:state.user\r\n   }\r\n})(Index)"]},"metadata":{},"sourceType":"module"}