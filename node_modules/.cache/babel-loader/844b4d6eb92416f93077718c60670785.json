{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useReducer, useContext, useLayoutEffect, useEffect, useRef, memo, useMemo, useCallback } from 'react';\n\nfunction countReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1;\n\n    case 'minus':\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nfunction MyCountFunc() {\n  var _useReducer = useReducer(countReducer, 0),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      count = _useReducer2[0],\n      dispatchCount = _useReducer2[1];\n\n  var _useState = useState('jokcy'),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var countRef = useRef(); // { current: '' }\n\n  countRef.current = count; //useMemo用于优化渲染进程\n\n  var config = useMemo(function () {\n    return {\n      text: \"count is \".concat(count),\n      color: count > 3 ? 'red' : 'blue'\n    };\n  }, [count]); // const handleButtonClick = useCallback(\n  //   () => dispatchCount({ type: 'add' }),\n  //   [],\n  // )\n\n  var handleButtonClick = useMemo(function () {\n    return function () {\n      return dispatchCount({\n        type: 'add'\n      });\n    };\n  }, []); //闭包陷阱 采用useRef()解决\n\n  var handleAlertButtonClick = function handleAlertButtonClick() {\n    setTimeout(function () {\n      alert(countRef.current);\n    }, 2000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    }\n  }), /*#__PURE__*/React.createElement(Child, {\n    config: config,\n    onButtonClick: handleButtonClick\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAlertButtonClick\n  }, \"alert count\"));\n}\n\nvar Child = memo(function Child(_ref) {\n  var onButtonClick = _ref.onButtonClick,\n      config = _ref.config;\n  console.log('child render');\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onButtonClick,\n    style: {\n      color: config.color\n    }\n  }, config.text);\n});\nexport default MyCountFunc;","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/b.js"],"names":["React","useState","useReducer","useContext","useLayoutEffect","useEffect","useRef","memo","useMemo","useCallback","countReducer","state","action","type","MyCountFunc","count","dispatchCount","name","setName","countRef","current","config","text","color","handleButtonClick","handleAlertButtonClick","setTimeout","alert","e","target","value","Child","onButtonClick","console","log"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,SALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,OARF,EASEC,WATF,QAUO,OAVP;;AAYA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAK,OAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD;;AAED,SAASG,WAAT,GAAuB;AAAA,oBACUZ,UAAU,CAACQ,YAAD,EAAe,CAAf,CADpB;AAAA;AAAA,MACdK,KADc;AAAA,MACPC,aADO;;AAAA,kBAEGf,QAAQ,CAAC,OAAD,CAFX;AAAA;AAAA,MAEdgB,IAFc;AAAA,MAERC,OAFQ;;AAIrB,MAAMC,QAAQ,GAAGb,MAAM,EAAvB,CAJqB,CAIK;;AAC1Ba,EAAAA,QAAQ,CAACC,OAAT,GAAmBL,KAAnB,CALqB,CAOrB;;AACA,MAAMM,MAAM,GAAGb,OAAO,CACpB;AAAA,WAAO;AACLc,MAAAA,IAAI,qBAAcP,KAAd,CADC;AAELQ,MAAAA,KAAK,EAAER,KAAK,GAAG,CAAR,GAAY,KAAZ,GAAoB;AAFtB,KAAP;AAAA,GADoB,EAKpB,CAACA,KAAD,CALoB,CAAtB,CARqB,CAgBrB;AACA;AACA;AACA;;AAEA,MAAMS,iBAAiB,GAAGhB,OAAO,CAC/B;AAAA,WAAM;AAAA,aAAMQ,aAAa,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAnB;AAAA,KAAN;AAAA,GAD+B,EAE/B,EAF+B,CAAjC,CArBqB,CA0BrB;;AACA,MAAMY,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAW;AACxCC,IAAAA,UAAU,CAAC,YAAM;AACfC,MAAAA,KAAK,CAACR,QAAQ,CAACC,OAAV,CAAL;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;;AAMA,sBACE,8CACE;AAAO,IAAA,KAAK,EAAEH,IAAd;AAAoB,IAAA,QAAQ,EAAE,kBAAAW,CAAC;AAAA,aAAIV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAAA;AAA/B,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAET,MAAf;AAAuB,IAAA,aAAa,EAAEG;AAAtC,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAEC;AAAjB,mBAHF,CADF;AAOD;;AAED,IAAMM,KAAK,GAAGxB,IAAI,CAAC,SAASwB,KAAT,OAA0C;AAAA,MAAzBC,aAAyB,QAAzBA,aAAyB;AAAA,MAAVX,MAAU,QAAVA,MAAU;AAC3DY,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,sBACE;AAAQ,IAAA,OAAO,EAAEF,aAAjB;AAAgC,IAAA,KAAK,EAAE;AAAET,MAAAA,KAAK,EAAEF,MAAM,CAACE;AAAhB;AAAvC,KACGF,MAAM,CAACC,IADV,CADF;AAKD,CAPiB,CAAlB;AASA,eAAeR,WAAf","sourcesContent":["import React, {\r\n  useState,\r\n  useReducer,\r\n  useContext,\r\n  useLayoutEffect,\r\n  useEffect,\r\n  useRef,\r\n  memo,\r\n  useMemo,\r\n  useCallback,\r\n} from 'react'\r\n\r\nfunction countReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return state + 1\r\n    case 'minus':\r\n      return state - 1\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction MyCountFunc() {\r\n  const [count, dispatchCount] = useReducer(countReducer, 0)\r\n  const [name, setName] = useState('jokcy')\r\n\r\n  const countRef = useRef() // { current: '' }\r\n  countRef.current = count\r\n\r\n  //useMemo用于优化渲染进程\r\n  const config = useMemo(\r\n    () => ({\r\n      text: `count is ${count}`,\r\n      color: count > 3 ? 'red' : 'blue',\r\n    }),\r\n    [count],\r\n  )\r\n\r\n  // const handleButtonClick = useCallback(\r\n  //   () => dispatchCount({ type: 'add' }),\r\n  //   [],\r\n  // )\r\n\r\n  const handleButtonClick = useMemo(\r\n    () => () => dispatchCount({ type: 'add' }),\r\n    [],\r\n  )\r\n\r\n  //闭包陷阱 采用useRef()解决\r\n  const handleAlertButtonClick = function() {\r\n    setTimeout(() => {\r\n      alert(countRef.current)\r\n    }, 2000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input value={name} onChange={e => setName(e.target.value)} />\r\n      <Child config={config} onButtonClick={handleButtonClick} />\r\n      <button onClick={handleAlertButtonClick}>alert count</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Child = memo(function Child({ onButtonClick, config }) {\r\n  console.log('child render')\r\n  return (\r\n    <button onClick={onButtonClick} style={{ color: config.color }}>\r\n      {config.text}\r\n    </button>\r\n  )\r\n})\r\n\r\nexport default MyCountFunc\r\n"]},"metadata":{},"sourceType":"module"}