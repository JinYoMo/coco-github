{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Row from \"antd/lib/row\";\nimport _Pagination from \"antd/lib/pagination\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { memo } from 'react';\nimport { withRouter } from 'next/router';\n//栅格\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Repo from '../components/Repo';\nimport api from '../lib/api'; //搜索条件\n\nvar LANGUAGE = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Rust'];\nvar SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\n/**\r\n * sort：排序方式\r\n * order：排序顺序（升/降序）\r\n * lang：仓库的项目开发主语言\r\n * page：分页页面\r\n */\n\nvar selectedItemStyle = {\n  borderLeft: '2px solid #e36209',\n  fontWeight: 100\n};\n\nfunction noop() {} //memo方法作用：name,query,lang,sort,order 这些参数无变化，则不会被重新渲染\n\n\nvar FilterLink = memo(function (_ref) {\n  var name = _ref.name,\n      query = _ref.query,\n      lang = _ref.lang,\n      sort = _ref.sort,\n      order = _ref.order;\n  var queryString = \"?query=\".concat(query);\n  if (lang) queryString += \"&lang=\".concat(lang);\n  if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc');\n  return /*#__PURE__*/React.createElement(Link, {\n    href: \"/search\".concat(queryString)\n  }, /*#__PURE__*/React.createElement(\"a\", null, name));\n});\n\nfunction Search(_ref2) {\n  var router = _ref2.router,\n      repos = _ref2.repos;\n  console.log(repos); // const {sort,order,lang,query}=router.query\n\n  var querys = _extends({}, router.query);\n\n  var _router$query = router.query,\n      sort = _router$query.sort,\n      order = _router$query.order,\n      lang = _router$query.lang,\n      page = _router$query.page;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jsx-3602065504\" + \" \" + \"root\"\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 20\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 6\n  }, /*#__PURE__*/React.createElement(_List, {\n    bordered: true,\n    header: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"jsx-3602065504\" + \" \" + \"list-header\"\n    }, \"\\u8BED\\u8A00\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGE,\n    renderItem: function renderItem(item) {\n      var selected = lang === item;\n      return /*#__PURE__*/React.createElement(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"jsx-3602065504\"\n      }, item) : /*#__PURE__*/React.createElement(FilterLink, _extends({}, querys, {\n        lang: item,\n        name: item\n      })));\n    }\n  }), /*#__PURE__*/React.createElement(_List, {\n    bordered: true,\n    header: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"jsx-3602065504\" + \" \" + \"list-header\"\n    }, \"\\u6392\\u5E8F\"),\n    dataSource: SORT_TYPES,\n    renderItem: function renderItem(item) {\n      var selected = false;\n\n      if (item.name === 'Best Match' && !sort) {\n        selected = true;\n      } else if (item.value === sort && item.order === order) {\n        selected = true;\n      }\n\n      return /*#__PURE__*/React.createElement(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"jsx-3602065504\"\n      }, item.name) : /*#__PURE__*/React.createElement(FilterLink, _extends({}, querys, {\n        sort: item.value,\n        order: item.order,\n        name: item.name\n      })));\n    }\n  })), /*#__PURE__*/React.createElement(_Col, {\n    span: 18\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"jsx-3602065504\" + \" \" + \"repos-title\"\n  }, repos.total_count, \" \\u4E2A\\u4ED3\\u5E93\"), repos.items.map(function (repo) {\n    return /*#__PURE__*/React.createElement(Repo, {\n      repo: repo,\n      key: repo.id\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jsx-3602065504\" + \" \" + \"Pagination\"\n  }, /*#__PURE__*/React.createElement(_Pagination, {\n    pageSize: 30,\n    current: Number(page) || 1,\n    tatal: repos.total_count,\n    onChange: noop,\n    itemRender: function itemRender(page, type, ol) {\n      var p = type === 'page' ? page : type === 'prev' ? page - 1 : page + 1;\n      var name = type === 'page' ? page : ol;\n      return /*#__PURE__*/React.createElement(FilterLink, _extends({}, querys, {\n        page: p,\n        name: name\n      }));\n    }\n  })))), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3602065504\"\n  }, \".root.jsx-3602065504{padding:20px 0;}.list-header.jsx-3602065504{font-weight:800;font-size:16px;}.repos-title.jsx-3602065504{border-bottom:1px solid #eee;font-size:24px;line-height:50px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFzkuKrkurrpobnnm65cXGdpdEh1YumhueebrlxcY29jby1naXRodWJcXHBhZ2VzXFxzZWFyY2guanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEhrQixBQUd5QixBQUdDLEFBSWEsZUFOOUIsQ0FHZ0IsYUFJQSxFQUhoQixhQUlrQixpQkFDbEIiLCJmaWxlIjoiRTpcXOS4quS6uumhueebrlxcZ2l0SHVi6aG555uuXFxjb2NvLWdpdGh1YlxccGFnZXNcXHNlYXJjaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7bWVtb30gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7d2l0aFJvdXRlcn0gZnJvbSAnbmV4dC9yb3V0ZXInXHJcbmltcG9ydCB7Um93LENvbCxMaXN0LFBhZ2luYXRpb259IGZyb20gJ2FudGQnICAvL+agheagvFxyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXHJcbmltcG9ydCBSb3V0ZXIgZnJvbSAnbmV4dC9yb3V0ZXInXHJcblxyXG5pbXBvcnQgUmVwbyBmcm9tICcuLi9jb21wb25lbnRzL1JlcG8nXHJcblxyXG5pbXBvcnQgYXBpIGZyb20gJy4uL2xpYi9hcGknXHJcblxyXG4vL+aQnOe0ouadoeS7tlxyXG5jb25zdCBMQU5HVUFHRT1bJ0phdmFTY3JpcHQnLCdIVE1MJywnQ1NTJywnVHlwZVNjcmlwdCcsJ0phdmEnLCdSdXN0J11cclxuY29uc3QgU09SVF9UWVBFUz1bXHJcbiAge1xyXG4gICAgbmFtZTonQmVzdCBNYXRjaCdcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6J01vc3QgU3RhcnMnLFxyXG4gICAgdmFsdWU6J3N0YXJzJyxcclxuICAgIG9yZGVyOidkZXNjJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTonRmV3ZXN0IFN0YXJzJyxcclxuICAgIHZhbHVlOidzdGFycycsXHJcbiAgICBvcmRlcjonYXNjJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTonTW9zdCBGb3JrcycsXHJcbiAgICB2YWx1ZTonZm9ya3MnLFxyXG4gICAgb3JkZXI6J2Rlc2MnXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOidGZXdlc3QgRm9ya3MnLFxyXG4gICAgdmFsdWU6J2ZvcmtzJyxcclxuICAgIG9yZGVyOidhc2MnXHJcbiAgfSxcclxuXVxyXG5cclxuLyoqXHJcbiAqIHNvcnTvvJrmjpLluo/mlrnlvI9cclxuICogb3JkZXLvvJrmjpLluo/pobrluo/vvIjljYcv6ZmN5bqP77yJXHJcbiAqIGxhbmfvvJrku5PlupPnmoTpobnnm67lvIDlj5HkuLvor63oqIBcclxuICogcGFnZe+8muWIhumhtemhtemdolxyXG4gKi9cclxuXHJcbiBjb25zdCBzZWxlY3RlZEl0ZW1TdHlsZT17XHJcbiAgIGJvcmRlckxlZnQ6JzJweCBzb2xpZCAjZTM2MjA5JyxcclxuICAgZm9udFdlaWdodDoxMDBcclxuIH1cclxuIGZ1bmN0aW9uIG5vb3AoKXt9XHJcbi8vbWVtb+aWueazleS9nOeUqO+8mm5hbWUscXVlcnksbGFuZyxzb3J0LG9yZGVyIOi/meS6m+WPguaVsOaXoOWPmOWMlu+8jOWImeS4jeS8muiiq+mHjeaWsOa4suafk1xyXG4gY29uc3QgRmlsdGVyTGluaz1tZW1vKCh7bmFtZSxxdWVyeSxsYW5nLHNvcnQsb3JkZXJ9KT0+e1xyXG4gICAgbGV0IHF1ZXJ5U3RyaW5nPWA/cXVlcnk9JHtxdWVyeX1gXHJcbiAgICBpZihsYW5nKSBxdWVyeVN0cmluZys9YCZsYW5nPSR7bGFuZ31gXHJcbiAgICBpZihzb3J0KSBxdWVyeVN0cmluZys9YCZzb3J0PSR7c29ydH0mb3JkZXI9JHtvcmRlcnx8J2Rlc2MnfWBcclxuXHJcbiAgICByZXR1cm4gPExpbmsgaHJlZj17YC9zZWFyY2gke3F1ZXJ5U3RyaW5nfWB9PjxhPntuYW1lfTwvYT48L0xpbms+XHJcbiB9KVxyXG5mdW5jdGlvbiBTZWFyY2goe3JvdXRlcixyZXBvc30pe1xyXG4gIGNvbnNvbGUubG9nKHJlcG9zKVxyXG4gIFxyXG4gIC8vIGNvbnN0IHtzb3J0LG9yZGVyLGxhbmcscXVlcnl9PXJvdXRlci5xdWVyeVxyXG4gIGNvbnN0IHsuLi5xdWVyeXN9PXJvdXRlci5xdWVyeVxyXG4gIGNvbnN0IHtzb3J0LG9yZGVyLGxhbmcscGFnZX09cm91dGVyLnF1ZXJ5XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwicm9vdFwiPlxyXG4gICAgICA8Um93IGd1dHRlcj17MjB9PlxyXG4gICAgICAgIDxDb2wgc3Bhbj17Nn0+XHJcbiAgICAgICAgICAgPExpc3QgXHJcbiAgICAgICAgICAgICBib3JkZXJlZFxyXG4gICAgICAgICAgICAgaGVhZGVyPXs8c3BhbiBjbGFzc05hbWU9XCJsaXN0LWhlYWRlclwiPuivreiogDwvc3Bhbj59XHJcbiAgICAgICAgICAgICBzdHlsZT17e21hcmdpbkJvdHRvbToyMH19XHJcbiAgICAgICAgICAgICBkYXRhU291cmNlPXtMQU5HVUFHRX1cclxuICAgICAgICAgICAgIHJlbmRlckl0ZW09e2l0ZW09PntcclxuICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWQ9bGFuZz09PWl0ZW1cclxuICAgICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAgICA8TGlzdC5JdGVtIHN0eWxlPXtzZWxlY3RlZD9zZWxlY3RlZEl0ZW1TdHlsZTpudWxsfT5cclxuICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZD88c3Bhbj57aXRlbX08L3NwYW4+OjxGaWx0ZXJMaW5rIHsuLi5xdWVyeXN9IGxhbmc9e2l0ZW19IG5hbWU9e2l0ZW19Lz59XHJcbiAgICAgICAgICAgICAgICAgPC9MaXN0Lkl0ZW0+XHJcbiAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPExpc3QgXHJcbiAgICAgICAgICAgICBib3JkZXJlZFxyXG4gICAgICAgICAgICAgaGVhZGVyPXs8c3BhbiBjbGFzc05hbWU9XCJsaXN0LWhlYWRlclwiPuaOkuW6jzwvc3Bhbj59XHJcbiAgICAgICAgICAgICBkYXRhU291cmNlPXtTT1JUX1RZUEVTfVxyXG4gICAgICAgICAgICAgcmVuZGVySXRlbT17aXRlbT0+e1xyXG4gICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWQ9ZmFsc2VcclxuICAgICAgICAgICAgICAgaWYoaXRlbS5uYW1lPT09J0Jlc3QgTWF0Y2gnJiYhc29ydCl7XHJcbiAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ9dHJ1ZVxyXG4gICAgICAgICAgICAgICB9ZWxzZSBpZihpdGVtLnZhbHVlPT09c29ydCYmaXRlbS5vcmRlcj09PW9yZGVyKXtcclxuICAgICAgICAgICAgICAgICBzZWxlY3RlZD10cnVlXHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAgIDxMaXN0Lkl0ZW0gc3R5bGU9e3NlbGVjdGVkP3NlbGVjdGVkSXRlbVN0eWxlOm51bGx9PlxyXG4gICAgICAgICAgICAgICAgICB7c2VsZWN0ZWQ/PHNwYW4+e2l0ZW0ubmFtZX08L3NwYW4+OjxGaWx0ZXJMaW5rIHsuLi5xdWVyeXN9IHNvcnQ9e2l0ZW0udmFsdWV9IG9yZGVyPXtpdGVtLm9yZGVyfSBuYW1lPXtpdGVtLm5hbWV9Lz59XHJcbiAgICAgICAgICAgICAgICAgPC9MaXN0Lkl0ZW0+XHJcbiAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgLz5cclxuICAgICAgICA8L0NvbD5cclxuICAgICAgICA8Q29sIHNwYW49ezE4fT5cclxuICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInJlcG9zLXRpdGxlXCI+e3JlcG9zLnRvdGFsX2NvdW50fSDkuKrku5PlupM8L2gzPlxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgcmVwb3MuaXRlbXMubWFwKHJlcG8gPT4gPFJlcG8gcmVwbz17cmVwb30ga2V5PXtyZXBvLmlkfSAvPilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlBhZ2luYXRpb25cIj5cclxuICAgICAgICAgICAgICA8UGFnaW5hdGlvbiBcclxuICAgICAgICAgICAgICAgIHBhZ2VTaXplPXszMH1cclxuICAgICAgICAgICAgICAgIGN1cnJlbnQ9e051bWJlcihwYWdlKXx8MX1cclxuICAgICAgICAgICAgICAgIHRhdGFsPXtyZXBvcy50b3RhbF9jb3VudH1cclxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtub29wfVxyXG4gICAgICAgICAgICAgICAgaXRlbVJlbmRlcj17KHBhZ2UsIHR5cGUsIG9sKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHAgPVxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGUgPT09ICdwYWdlJyA/IHBhZ2UgOiB0eXBlID09PSAncHJldicgPyBwYWdlIC0gMSA6IHBhZ2UgKyAxXHJcbiAgICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSB0eXBlID09PSAncGFnZScgPyBwYWdlIDogb2xcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIDxGaWx0ZXJMaW5rIHsuLi5xdWVyeXN9IHBhZ2U9e3B9IG5hbWU9e25hbWV9IC8+XHJcbiAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvQ29sPlxyXG4gICAgICA8L1Jvdz5cclxuICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgIC5yb290e1xyXG4gICAgICAgICAgcGFkZGluZzoyMHB4IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5saXN0LWhlYWRlcntcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OjgwMDtcclxuICAgICAgICAgIGZvbnQtc2l6ZToxNnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAucmVwb3MtdGl0bGV7XHJcbiAgICAgICAgICBib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZWVlO1xyXG4gICAgICAgICAgZm9udC1zaXplOjI0cHg7XHJcbiAgICAgICAgICBsaW5lLWhlaWdodDo1MHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICA8L2Rpdj5cclxuICApXHJcbiAgXHJcbn1cclxuXHJcblNlYXJjaC5nZXRJbml0aWFsUHJvcHM9YXN5bmMgKHtjdHh9KT0+e1xyXG4gIGNvbnN0IHtxdWVyeSxzb3J0LG9yZGVyLGxhbmcscGFnZX09Y3R4LnF1ZXJ5O1xyXG4gIGlmKCFxdWVyeSl7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXBvczp7XHJcbiAgICAgICAgdG90YWxfY291bnQ6MFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vP3E9cmVhY3QrbGFuZ3VhZ2U6amF2YXNjcmlwdCZzb3J0PXN0YXJzJm9yZGVyPWRlc2MmcGFnZT0yXHJcbiAgbGV0IHF1ZXJ5U3RyaW5nPWA/cT0ke3F1ZXJ5fWBcclxuICBpZihsYW5nKSBxdWVyeVN0cmluZys9YCtsYW5ndWFnZToke2xhbmd9YFxyXG4gIGlmKHNvcnQpIHF1ZXJ5U3RyaW5nKz1gJnNvcnQ9JHtzb3J0fSZvcmRlcj0ke29yZGVyfHwnZGVzYyd9YFxyXG4gIGlmKHBhZ2UpIHF1ZXJ5U3RyaW5nKz1gJnBhZ2U9JHtwYWdlfWBcclxuICAvL+iwg+eUqOaQnOe0ouWIl+ihqOaOpeWPo1xyXG4gIGNvbnN0IHJlc3VsdD1hd2FpdCBhcGkucmVxdWVzdCh7XHJcbiAgICB1cmw6YC9zZWFyY2gvcmVwb3NpdG9yaWVzJHtxdWVyeVN0cmluZ31gXHJcbiAgfSxjdHgucmVxLGN0eC5yZXMpXHJcblxyXG4gIHJldHVybiB7XHJcbiAgICByZXBvczpyZXN1bHQuZGF0YVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihTZWFyY2gpIl19 */\\n/*@ sourceURL=E:\\\\\\u4E2A\\u4EBA\\u9879\\u76EE\\\\gitHub\\u9879\\u76EE\\\\coco-github\\\\pages\\\\search.js */\"));\n}\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3) {\n    var ctx, _ctx$query, query, sort, order, lang, page, queryString, result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref3.ctx;\n            _ctx$query = ctx.query, query = _ctx$query.query, sort = _ctx$query.sort, order = _ctx$query.order, lang = _ctx$query.lang, page = _ctx$query.page;\n\n            if (query) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              repos: {\n                total_count: 0\n              }\n            });\n\n          case 4:\n            //?q=react+language:javascript&sort=stars&order=desc&page=2\n            queryString = \"?q=\".concat(query);\n            if (lang) queryString += \"+language:\".concat(lang);\n            if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc');\n            if (page) queryString += \"&page=\".concat(page); //调用搜索列表接口\n\n            _context.next = 10;\n            return api.request({\n              url: \"/search/repositories\".concat(queryString)\n            }, ctx.req, ctx.res);\n\n          case 10:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              repos: result.data\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default withRouter(Search);","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/search.js"],"names":["memo","withRouter","Link","Router","Repo","api","LANGUAGE","SORT_TYPES","name","value","order","selectedItemStyle","borderLeft","fontWeight","noop","FilterLink","query","lang","sort","queryString","Search","router","repos","console","log","querys","page","marginBottom","item","selected","total_count","items","map","repo","id","Number","type","ol","p","getInitialProps","ctx","request","url","req","res","result","data"],"mappings":"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","sourcesContent":["import {memo} from 'react'\r\nimport {withRouter} from 'next/router'\r\nimport {Row,Col,List,Pagination} from 'antd'  //栅格\r\nimport Link from 'next/link'\r\nimport Router from 'next/router'\r\n\r\nimport Repo from '../components/Repo'\r\n\r\nimport api from '../lib/api'\r\n\r\n//搜索条件\r\nconst LANGUAGE=['JavaScript','HTML','CSS','TypeScript','Java','Rust']\r\nconst SORT_TYPES=[\r\n  {\r\n    name:'Best Match'\r\n  },\r\n  {\r\n    name:'Most Stars',\r\n    value:'stars',\r\n    order:'desc'\r\n  },\r\n  {\r\n    name:'Fewest Stars',\r\n    value:'stars',\r\n    order:'asc'\r\n  },\r\n  {\r\n    name:'Most Forks',\r\n    value:'forks',\r\n    order:'desc'\r\n  },\r\n  {\r\n    name:'Fewest Forks',\r\n    value:'forks',\r\n    order:'asc'\r\n  },\r\n]\r\n\r\n/**\r\n * sort：排序方式\r\n * order：排序顺序（升/降序）\r\n * lang：仓库的项目开发主语言\r\n * page：分页页面\r\n */\r\n\r\n const selectedItemStyle={\r\n   borderLeft:'2px solid #e36209',\r\n   fontWeight:100\r\n }\r\n function noop(){}\r\n//memo方法作用：name,query,lang,sort,order 这些参数无变化，则不会被重新渲染\r\n const FilterLink=memo(({name,query,lang,sort,order})=>{\r\n    let queryString=`?query=${query}`\r\n    if(lang) queryString+=`&lang=${lang}`\r\n    if(sort) queryString+=`&sort=${sort}&order=${order||'desc'}`\r\n\r\n    return <Link href={`/search${queryString}`}><a>{name}</a></Link>\r\n })\r\nfunction Search({router,repos}){\r\n  console.log(repos)\r\n  \r\n  // const {sort,order,lang,query}=router.query\r\n  const {...querys}=router.query\r\n  const {sort,order,lang,page}=router.query\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n           <List \r\n             bordered\r\n             header={<span className=\"list-header\">语言</span>}\r\n             style={{marginBottom:20}}\r\n             dataSource={LANGUAGE}\r\n             renderItem={item=>{\r\n               const selected=lang===item\r\n               return (\r\n                 <List.Item style={selected?selectedItemStyle:null}>\r\n                   {selected?<span>{item}</span>:<FilterLink {...querys} lang={item} name={item}/>}\r\n                 </List.Item>\r\n               )\r\n             }}\r\n           />\r\n            <List \r\n             bordered\r\n             header={<span className=\"list-header\">排序</span>}\r\n             dataSource={SORT_TYPES}\r\n             renderItem={item=>{\r\n               let selected=false\r\n               if(item.name==='Best Match'&&!sort){\r\n                 selected=true\r\n               }else if(item.value===sort&&item.order===order){\r\n                 selected=true\r\n               }\r\n               return (\r\n                <List.Item style={selected?selectedItemStyle:null}>\r\n                  {selected?<span>{item.name}</span>:<FilterLink {...querys} sort={item.value} order={item.order} name={item.name}/>}\r\n                 </List.Item>\r\n               )\r\n             }}\r\n           />\r\n        </Col>\r\n        <Col span={18}>\r\n            <h3 className=\"repos-title\">{repos.total_count} 个仓库</h3>\r\n            {\r\n              repos.items.map(repo => <Repo repo={repo} key={repo.id} />)\r\n            }\r\n            <div className=\"Pagination\">\r\n              <Pagination \r\n                pageSize={30}\r\n                current={Number(page)||1}\r\n                tatal={repos.total_count}\r\n                onChange={noop}\r\n                itemRender={(page, type, ol) => {\r\n                  const p =\r\n                    type === 'page' ? page : type === 'prev' ? page - 1 : page + 1\r\n                  const name = type === 'page' ? page : ol\r\n                  return <FilterLink {...querys} page={p} name={name} />\r\n                }}\r\n              />\r\n            </div>\r\n        </Col>\r\n      </Row>\r\n      <style jsx>{`\r\n        .root{\r\n          padding:20px 0;\r\n        }\r\n        .list-header{\r\n          font-weight:800;\r\n          font-size:16px;\r\n        }\r\n        .repos-title{\r\n          border-bottom:1px solid #eee;\r\n          font-size:24px;\r\n          line-height:50px;\r\n        }\r\n        `}</style>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nSearch.getInitialProps=async ({ctx})=>{\r\n  const {query,sort,order,lang,page}=ctx.query;\r\n  if(!query){\r\n    return {\r\n      repos:{\r\n        total_count:0\r\n      }\r\n    }\r\n  }\r\n  //?q=react+language:javascript&sort=stars&order=desc&page=2\r\n  let queryString=`?q=${query}`\r\n  if(lang) queryString+=`+language:${lang}`\r\n  if(sort) queryString+=`&sort=${sort}&order=${order||'desc'}`\r\n  if(page) queryString+=`&page=${page}`\r\n  //调用搜索列表接口\r\n  const result=await api.request({\r\n    url:`/search/repositories${queryString}`\r\n  },ctx.req,ctx.res)\r\n\r\n  return {\r\n    repos:result.data\r\n  }\r\n}\r\n\r\nexport default withRouter(Search)"]},"metadata":{},"sourceType":"module"}