{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { Component } from 'react';\nimport { ServerStyleSheet } from 'styled-components';\n\nfunction withLog(Comp) {\n  return function (props) {\n    console.log(props);\n    return /*#__PURE__*/React.createElement(Comp, props); //渲染组件\n  };\n}\n/** \r\n * 只有在服务端渲染时才会被执行 客户端是不起作用的\r\n * Document中本身就有getInitialProps和render方法 自定义就会覆盖 至少需要写出下面内容\r\n*/\n\n\nvar MyDocument = /*#__PURE__*/function (_Document) {\n  _inherits(MyDocument, _Document);\n\n  var _super = _createSuper(MyDocument);\n\n  function MyDocument() {\n    _classCallCheck(this, MyDocument);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyDocument, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Html, null, /*#__PURE__*/React.createElement(Head, null), /*#__PURE__*/React.createElement(\"body\", {\n        className: \"test\"\n      }, /*#__PURE__*/React.createElement(Main, null), /*#__PURE__*/React.createElement(NextScript, null)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n        var sheet, originalRenderPage, props;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                sheet = new ServerStyleSheet();\n                originalRenderPage = ctx.renderPage;\n                _context.prev = 2;\n\n                ctx.renderPage = function () {\n                  return originalRenderPage({\n                    enhanceApp: function enhanceApp(App) {\n                      return function (props) {\n                        return sheet.collectStyles( /*#__PURE__*/React.createElement(App, props));\n                      };\n                    } //增强App  _app.js导出的app  withLog方法用来做包装\n                    // enhanceComponent:Component=>withLog(Component)  //pages下面定义的每一个js文件\n\n                  });\n                };\n\n                _context.next = 6;\n                return Document.getInitialProps(ctx);\n\n              case 6:\n                props = _context.sent;\n                return _context.abrupt(\"return\", _objectSpread({}, props, {\n                  style: /*#__PURE__*/React.createElement(React.Fragment, null, props.styles, sheet.getStyleElement()) //内置样式+style compontents样式\n\n                }));\n\n              case 8:\n                _context.prev = 8;\n                sheet.seal();\n                return _context.finish(8);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2,, 8, 11]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyDocument;\n}(Document);\n\nexport default MyDocument;","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/_document.js"],"names":["Document","Html","Head","Main","NextScript","Component","ServerStyleSheet","withLog","Comp","props","console","log","MyDocument","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","collectStyles","getInitialProps","style","styles","getStyleElement","seal"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,QAAP,IAAiBC,IAAjB,EAAsBC,IAAtB,EAA2BC,IAA3B,EAAgCC,UAAhC,QAAiD,eAAjD;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,gBAAR,QAA+B,mBAA/B;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAsB;AACnB,SAAO,UAACC,KAAD,EAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,wBAAO,oBAAC,IAAD,EAAUA,KAAV,CAAP,CAFc,CAEY;AAC3B,GAHD;AAIF;AAED;AACA;AACA;AACA;;;IACMG,U;;;;;;;;;;;;;6BAmBK;AACP,0BAAO,oBAAC,IAAD,qBACJ,oBAAC,IAAD,OADI,eAEJ;AAAM,QAAA,SAAS,EAAC;AAAhB,sBACE,oBAAC,IAAD,OADF,eAEE,oBAAC,UAAD,OAFF,CAFI,CAAP;AAOD;;;;uGA1B4BC,G;;;;;;AACrBC,gBAAAA,K,GAAM,IAAIR,gBAAJ,E;AACNS,gBAAAA,kB,GAAmBF,GAAG,CAACG,U;;;AAG3BH,gBAAAA,GAAG,CAACG,UAAJ,GAAe;AAAA,yBAAID,kBAAkB,CAAC;AACpCE,oBAAAA,UAAU,EAAC,oBAAAC,GAAG;AAAA,6BAAE,UAACT,KAAD;AAAA,+BAASK,KAAK,CAACK,aAAN,eAAoB,oBAAC,GAAD,EAASV,KAAT,CAApB,CAAT;AAAA,uBAAF;AAAA,qBADsB,CAC+B;AACnE;;AAFoC,mBAAD,CAAtB;AAAA,iBAAf;;;uBAIkBT,QAAQ,CAACoB,eAAT,CAAyBP,GAAzB,C;;;AAAZJ,gBAAAA,K;mEAEDA,K;AACHY,kBAAAA,KAAK,eAAC,0CAAGZ,KAAK,CAACa,MAAT,EAAiBR,KAAK,CAACS,eAAN,EAAjB,C,CAA8C;;;;;;AAGtDT,gBAAAA,KAAK,CAACU,IAAN;;;;;;;;;;;;;;;;;;;;EAhBmBxB,Q;;AA8BzB,eAAeY,UAAf","sourcesContent":["import Document,{Html,Head,Main,NextScript} from 'next/document'\r\nimport { Component } from 'react';\r\nimport {ServerStyleSheet} from 'styled-components'\r\n\r\nfunction withLog(Comp){\r\n   return (props)=>{\r\n     console.log(props);\r\n     return <Comp {...props}/> //渲染组件\r\n   }\r\n}\r\n\r\n/** \r\n * 只有在服务端渲染时才会被执行 客户端是不起作用的\r\n * Document中本身就有getInitialProps和render方法 自定义就会覆盖 至少需要写出下面内容\r\n*/\r\nclass MyDocument extends Document{\r\n  static async getInitialProps(ctx){\r\n    const sheet=new ServerStyleSheet()\r\n    const originalRenderPage=ctx.renderPage;\r\n\r\n    try{\r\n      ctx.renderPage=()=>originalRenderPage({\r\n        enhanceApp:App=>(props)=>sheet.collectStyles(<App {...props} />),  //增强App  _app.js导出的app  withLog方法用来做包装\r\n        // enhanceComponent:Component=>withLog(Component)  //pages下面定义的每一个js文件\r\n      })\r\n      const props=await Document.getInitialProps(ctx)\r\n      return {\r\n        ...props,\r\n        style:<>{props.styles}{sheet.getStyleElement()}</>  //内置样式+style compontents样式\r\n      }\r\n    }finally{\r\n      sheet.seal()\r\n    }\r\n  }\r\n  render() {\r\n    return <Html>\r\n       <Head />\r\n       <body className=\"test\">\r\n         <Main />\r\n         <NextScript />\r\n       </body>\r\n    </Html>\r\n  }\r\n}\r\n\r\nexport default MyDocument"]},"metadata":{},"sourceType":"module"}