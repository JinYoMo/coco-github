{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nimport { useCallback } from 'react';\nimport { withRouter } from 'next/router';\n//栅格\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport api from '../lib/api'; //搜索条件\n\nvar LANGUAGE = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Rust'];\nvar SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\n/**\r\n * sort：排序方式\r\n * order：排序顺序（升/降序）\r\n * lang：仓库的项目开发主语言\r\n * page：分页页面\r\n */\n\nvar selectedItemStyle = {\n  borderLeft: '2px solid #e36209',\n  fontWeight: 100\n};\n\nvar FilterLink = function FilterLink(_ref) {\n  var name = _ref.name,\n      query = _ref.query,\n      lang = _ref.lang,\n      sort = _ref.sort,\n      order = _ref.order;\n  var queryString = \"?query=\".concat(query);\n  if (lang) queryString += \"&lang=\".concat(lang);\n  if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc');\n  return /*#__PURE__*/React.createElement(Link, {\n    href: \"/search\".concat(queryString)\n  }, /*#__PURE__*/React.createElement(\"a\", null, name));\n};\n\nfunction Search(_ref2) {\n  var router = _ref2.router,\n      repos = _ref2.repos;\n  console.log(repos); // const {sort,order,lang,query}=router.query\n\n  var querys = _extends({}, router.query);\n\n  var _router$query = router.query,\n      sort = _router$query.sort,\n      order = _router$query.order,\n      lang = _router$query.lang;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root\"\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 20\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 6\n  }, /*#__PURE__*/React.createElement(_List, {\n    bordered: true,\n    header: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"list-header\"\n    }, \"\\u8BED\\u8A00\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGE,\n    renderItem: function renderItem(item) {\n      var selected = lang === item;\n      return /*#__PURE__*/React.createElement(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? /*#__PURE__*/React.createElement(\"span\", null, item) : /*#__PURE__*/React.createElement(FilterLink, _extends({}, querys, {\n        lang: item,\n        name: item\n      })));\n    }\n  }), /*#__PURE__*/React.createElement(_List, {\n    bordered: true,\n    header: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"list-header\"\n    }, \"\\u6392\\u5E8F\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: SORT_TYPES,\n    renderItem: function renderItem(item) {\n      var selected = false;\n\n      if (item.name === 'Best Match' && !sort) {\n        selected = true;\n      } else if (item.value === sort && item.order === order) {\n        selected = true;\n      }\n\n      return /*#__PURE__*/React.createElement(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? /*#__PURE__*/React.createElement(\"span\", null, item.name) : /*#__PURE__*/React.createElement(FilterLink, _extends({}, querys, {\n        sort: item.value,\n        order: item.order,\n        name: item.name\n      })));\n    }\n  }))));\n}\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3) {\n    var ctx, _ctx$query, query, sort, order, lang, page, queryString, result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref3.ctx;\n            _ctx$query = ctx.query, query = _ctx$query.query, sort = _ctx$query.sort, order = _ctx$query.order, lang = _ctx$query.lang, page = _ctx$query.page;\n\n            if (query) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              repos: {\n                total_count: 0\n              }\n            });\n\n          case 4:\n            //?q=react+language:javascript&sort=stars&order=desc&page=2\n            queryString = \"?q=\".concat(query);\n            if (lang) queryString += \"+language:\".concat(lang);\n            if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc');\n            if (page) queryString += \"&page=\".concat(page); //调用搜索列表接口\n\n            _context.next = 10;\n            return api.request({\n              url: \"/search/repositories\".concat(queryString)\n            }, ctx.req, ctx.res);\n\n          case 10:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              repos: result.data\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default withRouter(Search);","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/search.js"],"names":["useCallback","withRouter","Link","Router","api","LANGUAGE","SORT_TYPES","name","value","order","selectedItemStyle","borderLeft","fontWeight","FilterLink","query","lang","sort","queryString","Search","router","repos","console","log","querys","marginBottom","item","selected","getInitialProps","ctx","page","total_count","request","url","req","res","result","data"],"mappings":"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","sourcesContent":["import {useCallback} from 'react'\r\nimport {withRouter} from 'next/router'\r\nimport {Row,Col,List} from 'antd'  //栅格\r\nimport Link from 'next/link'\r\nimport Router from 'next/router'\r\n\r\nimport api from '../lib/api'\r\n\r\n//搜索条件\r\nconst LANGUAGE=['JavaScript','HTML','CSS','TypeScript','Java','Rust']\r\nconst SORT_TYPES=[\r\n  {\r\n    name:'Best Match'\r\n  },\r\n  {\r\n    name:'Most Stars',\r\n    value:'stars',\r\n    order:'desc'\r\n  },\r\n  {\r\n    name:'Fewest Stars',\r\n    value:'stars',\r\n    order:'asc'\r\n  },\r\n  {\r\n    name:'Most Forks',\r\n    value:'forks',\r\n    order:'desc'\r\n  },\r\n  {\r\n    name:'Fewest Forks',\r\n    value:'forks',\r\n    order:'asc'\r\n  },\r\n]\r\n\r\n/**\r\n * sort：排序方式\r\n * order：排序顺序（升/降序）\r\n * lang：仓库的项目开发主语言\r\n * page：分页页面\r\n */\r\n\r\n const selectedItemStyle={\r\n   borderLeft:'2px solid #e36209',\r\n   fontWeight:100\r\n }\r\n\r\n const FilterLink=({name,query,lang,sort,order})=>{\r\n    let queryString=`?query=${query}`\r\n    if(lang) queryString+=`&lang=${lang}`\r\n    if(sort) queryString+=`&sort=${sort}&order=${order||'desc'}`\r\n\r\n    return <Link href={`/search${queryString}`}><a>{name}</a></Link>\r\n }\r\nfunction Search({router,repos}){\r\n  console.log(repos)\r\n  \r\n  // const {sort,order,lang,query}=router.query\r\n  const {...querys}=router.query\r\n  const {sort,order,lang}=router.query\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n           <List \r\n             bordered\r\n             header={<span className=\"list-header\">语言</span>}\r\n             style={{marginBottom:20}}\r\n             dataSource={LANGUAGE}\r\n             renderItem={item=>{\r\n               const selected=lang===item\r\n               return (\r\n                 <List.Item style={selected?selectedItemStyle:null}>\r\n                   {selected?<span>{item}</span>:<FilterLink {...querys} lang={item} name={item}/>}\r\n                 </List.Item>\r\n               )\r\n             }}\r\n           />\r\n            <List \r\n             bordered\r\n             header={<span className=\"list-header\">排序</span>}\r\n             style={{marginBottom:20}}\r\n             dataSource={SORT_TYPES}\r\n             renderItem={item=>{\r\n               let selected=false\r\n               if(item.name==='Best Match'&&!sort){\r\n                 selected=true\r\n               }else if(item.value===sort&&item.order===order){\r\n                 selected=true\r\n               }\r\n               return (\r\n                <List.Item style={selected?selectedItemStyle:null}>\r\n                  {selected?<span>{item.name}</span>:<FilterLink {...querys} sort={item.value} order={item.order} name={item.name}/>}\r\n                 </List.Item>\r\n               )\r\n             }}\r\n           />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nSearch.getInitialProps=async ({ctx})=>{\r\n  const {query,sort,order,lang,page}=ctx.query;\r\n  if(!query){\r\n    return {\r\n      repos:{\r\n        total_count:0\r\n      }\r\n    }\r\n  }\r\n  //?q=react+language:javascript&sort=stars&order=desc&page=2\r\n  let queryString=`?q=${query}`\r\n  if(lang) queryString+=`+language:${lang}`\r\n  if(sort) queryString+=`&sort=${sort}&order=${order||'desc'}`\r\n  if(page) queryString+=`&page=${page}`\r\n  //调用搜索列表接口\r\n  const result=await api.request({\r\n    url:`/search/repositories${queryString}`\r\n  },ctx.req,ctx.res)\r\n\r\n  return {\r\n    repos:result.data\r\n  }\r\n}\r\n\r\nexport default withRouter(Search)"]},"metadata":{},"sourceType":"module"}