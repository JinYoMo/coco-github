{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { withRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport styled from 'styled-components'; // import moment from 'moment'  //写在顶部为公共模块加载\n\n/** \r\n * 1.<style jsx>形成一个编译之后的className 组件间隔离，不影响其他组件的样式\r\n * 2.<style jsx>是这个组件被渲染后样式才会生效，当组件不再显示后，样式就会被移除消失，即使是全局样式也不再起作用\r\n * 3.nextjs优点：根据组件的挂载和卸载来进行样式的展示与否，不会出现样式冲突;有孤立作用域,即便组件同时显示，也不会有影响,全局样式可能有点影响\r\n */\n\n/**\r\n* 异步加载组件\r\n* 异步组件 只有等到执行渲染时才会被真正加载\r\n*/\n\nvar Comp = dynamic(function () {\n  return import('../../components/comp');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/comp')];\n    },\n    modules: ['../../components/comp']\n  }\n});\n/**\r\n* styled-components使用\r\n*/\n\nvar Title = styled.h1.withConfig({\n  displayName: \"a__Title\",\n  componentId: \"sc-1okkw9j-0\"\n})([\"color:yellow;font-size:40px;\"]);\nvar color = '#113366';\n\nvar A = function A(_ref) {\n  var router = _ref.router,\n      name = _ref.name,\n      time = _ref.time;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, null, \"This is Title \", time), /*#__PURE__*/React.createElement(Comp, null), /*#__PURE__*/React.createElement(Link, {\n    href: \"#aaa\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: _JSXStyle.dynamic([[\"417790115\", [color]]]) + \" \" + \"link\"\n  }, \"A \", router.query.id, \" \", name)), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"417790115\",\n    dynamic: [color]\n  }, \"a.__jsx-style-dynamic-selector{color:blue;}.link.__jsx-style-dynamic-selector{color:\".concat(color, \";}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFzkuKrkurrpobnnm65cXGdpdEh1YumhueebrlxcY29jby1naXRodWJcXHBhZ2VzXFx0ZXN0XFxhLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtDa0IsQUFJUSxBQUdBLFdBSEMsd0JBR0EiLCJmaWxlIjoiRTpcXOS4quS6uumhueebrlxcZ2l0SHVi6aG555uuXFxjb2NvLWdpdGh1YlxccGFnZXNcXHRlc3RcXGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3aXRoUm91dGVyfSBmcm9tICduZXh0L3JvdXRlcidcclxuaW1wb3J0IGR5bmFtaWMgZnJvbSAnbmV4dC9keW5hbWljJ1xyXG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnXHJcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcclxuLy8gaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnICAvL+WGmeWcqOmhtumDqOS4uuWFrOWFseaooeWdl+WKoOi9vVxyXG4vKiogXHJcbiAqIDEuPHN0eWxlIGpzeD7lvaLmiJDkuIDkuKrnvJbor5HkuYvlkI7nmoRjbGFzc05hbWUg57uE5Lu26Ze06ZqU56a777yM5LiN5b2x5ZON5YW25LuW57uE5Lu255qE5qC35byPXHJcbiAqIDIuPHN0eWxlIGpzeD7mmK/ov5nkuKrnu4Tku7booqvmuLLmn5PlkI7moLflvI/miY3kvJrnlJ/mlYjvvIzlvZPnu4Tku7bkuI3lho3mmL7npLrlkI7vvIzmoLflvI/lsLHkvJrooqvnp7vpmaTmtojlpLHvvIzljbPkvb/mmK/lhajlsYDmoLflvI/kuZ/kuI3lho3otbfkvZznlKhcclxuICogMy5uZXh0anPkvJjngrnvvJrmoLnmja7nu4Tku7bnmoTmjILovb3lkozljbjovb3mnaXov5vooYzmoLflvI/nmoTlsZXnpLrkuI7lkKbvvIzkuI3kvJrlh7rnjrDmoLflvI/lhrLnqoE75pyJ5a2k56uL5L2c55So5Z+fLOWNs+S+v+e7hOS7tuWQjOaXtuaYvuekuu+8jOS5n+S4jeS8muacieW9seWTjSzlhajlsYDmoLflvI/lj6/og73mnInngrnlvbHlk41cclxuICovXHJcbi8qKlxyXG4qIOW8guatpeWKoOi9vee7hOS7tlxyXG4qIOW8guatpee7hOS7tiDlj6rmnInnrYnliLDmiafooYzmuLLmn5Pml7bmiY3kvJrooqvnnJ/mraPliqDovb1cclxuKi9cclxuY29uc3QgQ29tcCA9IGR5bmFtaWMoaW1wb3J0KCcuLi8uLi9jb21wb25lbnRzL2NvbXAnKSlcclxuIC8qKlxyXG4gKiBzdHlsZWQtY29tcG9uZW50c+S9v+eUqFxyXG4qL1xyXG5jb25zdCBUaXRsZT1zdHlsZWQuaDFgXHJcbiAgY29sb3I6eWVsbG93O1xyXG4gIGZvbnQtc2l6ZTo0MHB4O1xyXG5gXHJcblxyXG5jb25zdCBjb2xvcj0nIzExMzM2NidcclxuY29uc3QgQT0oe3JvdXRlcixuYW1lLHRpbWV9KT0+KFxyXG4gICAgPD5cclxuICAgICAgPFRpdGxlPlRoaXMgaXMgVGl0bGUge3RpbWV9PC9UaXRsZT5cclxuICAgICAgPENvbXAgLz5cclxuICAgICAgPExpbmsgaHJlZj1cIiNhYWFcIj5cclxuICAgICAgICA8YSBjbGFzc05hbWU9XCJsaW5rXCI+XHJcbiAgICAgICAgICBBIHtyb3V0ZXIucXVlcnkuaWR9IHtuYW1lfVxyXG4gICAgICAgIDwvYT5cclxuICAgICAgPC9MaW5rPlxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgYXtcclxuICAgICAgICAgIGNvbG9yOmJsdWVcclxuICAgICAgICB9XHJcbiAgICAgICAgLmxpbmt7XHJcbiAgICAgICAgICBjb2xvcjoke2NvbG9yfVxyXG4gICAgICAgIH1cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC8+XHJcbilcclxuLy/lhYjmiafooYxnZXRJbml0aWFsUHJvcHPmlrnms5XvvIzkuYvlkI7miY3kvJrmuLLmn5NB57uE5Lu2KOS4iumdoilcclxuQS5nZXRJbml0aWFsUHJvcHM9YXN5bmMgY3R4PT57XHJcbiAgLy/pnIDopoHkvb/nlKjml7bliqDovb0g5byC5q2l5Yqg6L29XHJcbiAgY29uc3QgbW9tZW50ID0gYXdhaXQgaW1wb3J0KCdtb21lbnQnKVxyXG4gIGNvbnN0IHByb21pc2U9bmV3IFByb21pc2UoKHJlc29sdmUpPT57XHJcbiAgICBzZXRUaW1lb3V0KCgpPT57XHJcbiAgICByZXNvbHZlKHtcclxuICAgICAgbmFtZTonam9rY3knLFxyXG4gICAgICB0aW1lOm1vbWVudC5kZWZhdWx0KERhdGUubm93KCkgLSA2MCoxMDAwKS5mcm9tTm93KCkgLy/ovazlj5jkuLogJ+S4gOWIhumSn+S5i+WJjSdcclxuICAgIH0pXHJcbiAgICB9LDEwMDApXHJcbiAgfSlcclxuICByZXR1cm4gYXdhaXQgcHJvbWlzZVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyKEEpIl19 */\\n/*@ sourceURL=E:\\\\\\u4E2A\\u4EBA\\u9879\\u76EE\\\\gitHub\\u9879\\u76EE\\\\coco-github\\\\pages\\\\test\\\\a.js */\")));\n}; //先执行getInitialProps方法，之后才会渲染A组件(上面)\n\n\nA.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var moment, promise;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('moment');\n\n          case 2:\n            moment = _context.sent;\n            promise = new _Promise(function (resolve) {\n              setTimeout(function () {\n                resolve({\n                  name: 'jokcy',\n                  time: moment.default(_Date$now() - 60 * 1000).fromNow() //转变为 '一分钟之前'\n\n                });\n              }, 1000);\n            });\n            _context.next = 6;\n            return promise;\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withRouter(A);","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/test/a.js"],"names":["withRouter","dynamic","Head","Link","styled","Comp","Title","h1","color","A","router","name","time","query","id","getInitialProps","ctx","moment","promise","resolve","setTimeout","default","fromNow"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,IAAMC,IAAI,GAAGJ,OAAO;AAAA,SAAC,OAAO,uBAAP,CAAD;AAAA;AAAA;AAAA;AAAA,kCAAQ,uBAAR;AAAA;AAAA,cAAQ,uBAAR;AAAA;AAAA,EAApB;AACC;AACD;AACA;;AACA,IAAMK,KAAK,GAACF,MAAM,CAACG,EAAR;AAAA;AAAA;AAAA,oCAAX;AAKA,IAAMC,KAAK,GAAC,SAAZ;;AACA,IAAMC,CAAC,GAAC,SAAFA,CAAE;AAAA,MAAEC,MAAF,QAAEA,MAAF;AAAA,MAASC,IAAT,QAASA,IAAT;AAAA,MAAcC,IAAd,QAAcA,IAAd;AAAA,sBACJ,uDACE,oBAAC,KAAD,0BAAsBA,IAAtB,CADF,eAEE,oBAAC,IAAD,OAFF,eAGE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,kBACE;AAAA,iDASUJ,KATV,aAAa;AAAb,WACKE,MAAM,CAACG,KAAP,CAAaC,EADlB,OACuBH,IADvB,CADF,CAHF;AAAA;AAAA,cAacH,KAbd;AAAA,mGAacA,KAbd,yhGADI;AAAA,CAAR,C,CAmBA;;;AACAC,CAAC,CAACM,eAAF;AAAA,uEAAkB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEK,OAAO,QAAP,CAFL;;AAAA;AAEVC,YAAAA,MAFU;AAGVC,YAAAA,OAHU,GAGF,aAAY,UAACC,OAAD,EAAW;AACnCC,cAAAA,UAAU,CAAC,YAAI;AACfD,gBAAAA,OAAO,CAAC;AACNR,kBAAAA,IAAI,EAAC,OADC;AAENC,kBAAAA,IAAI,EAACK,MAAM,CAACI,OAAP,CAAe,cAAa,KAAG,IAA/B,EAAqCC,OAArC,EAFC,CAE8C;;AAF9C,iBAAD,CAAP;AAIC,eALS,EAKR,IALQ,CAAV;AAMD,aAPa,CAHE;AAAA;AAAA,mBAWHJ,OAXG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAelB,UAAU,CAACS,CAAD,CAAzB","sourcesContent":["import { withRouter} from 'next/router'\r\nimport dynamic from 'next/dynamic'\r\nimport Head from 'next/head'\r\nimport Link from 'next/link'\r\nimport styled from 'styled-components'\r\n// import moment from 'moment'  //写在顶部为公共模块加载\r\n/** \r\n * 1.<style jsx>形成一个编译之后的className 组件间隔离，不影响其他组件的样式\r\n * 2.<style jsx>是这个组件被渲染后样式才会生效，当组件不再显示后，样式就会被移除消失，即使是全局样式也不再起作用\r\n * 3.nextjs优点：根据组件的挂载和卸载来进行样式的展示与否，不会出现样式冲突;有孤立作用域,即便组件同时显示，也不会有影响,全局样式可能有点影响\r\n */\r\n/**\r\n* 异步加载组件\r\n* 异步组件 只有等到执行渲染时才会被真正加载\r\n*/\r\nconst Comp = dynamic(import('../../components/comp'))\r\n /**\r\n * styled-components使用\r\n*/\r\nconst Title=styled.h1`\r\n  color:yellow;\r\n  font-size:40px;\r\n`\r\n\r\nconst color='#113366'\r\nconst A=({router,name,time})=>(\r\n    <>\r\n      <Title>This is Title {time}</Title>\r\n      <Comp />\r\n      <Link href=\"#aaa\">\r\n        <a className=\"link\">\r\n          A {router.query.id} {name}\r\n        </a>\r\n      </Link>\r\n      <style jsx>{`\r\n        a{\r\n          color:blue\r\n        }\r\n        .link{\r\n          color:${color}\r\n        }\r\n      `}</style>\r\n    </>\r\n)\r\n//先执行getInitialProps方法，之后才会渲染A组件(上面)\r\nA.getInitialProps=async ctx=>{\r\n  //需要使用时加载 异步加载\r\n  const moment = await import('moment')\r\n  const promise=new Promise((resolve)=>{\r\n    setTimeout(()=>{\r\n    resolve({\r\n      name:'jokcy',\r\n      time:moment.default(Date.now() - 60*1000).fromNow() //转变为 '一分钟之前'\r\n    })\r\n    },1000)\r\n  })\r\n  return await promise\r\n}\r\n\r\nexport default withRouter(A)"]},"metadata":{},"sourceType":"module"}