{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport React from \"react\";\nimport { withRouter } from 'next/router';\n//栅格\nimport Link from 'next/link';\nimport api from '../lib/api'; //搜索条件\n\nvar LANGUAGE = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Rust'];\nvar SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\n/**\r\n * sort：排序方式\r\n * order：排序顺序（升/降序）\r\n * lang：仓库的项目开发主语言\r\n * page：分页页面\r\n */\n\nfunction Search(_ref) {\n  var router = _ref.router,\n      repos = _ref.repos;\n  console.log(repos);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root\"\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 20\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 6\n  }, /*#__PURE__*/React.createElement(_List, {\n    bordered: true,\n    header: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"list-header\"\n    }, \"\\u8BED\\u8A00\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGE,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(_List.Item, null, /*#__PURE__*/React.createElement(Link, {\n        href: \"/search\"\n      }, /*#__PURE__*/React.createElement(\"a\", null, item)));\n    }\n  }), /*#__PURE__*/React.createElement(_List, {\n    bordered: true,\n    header: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"list-header\"\n    }, \"\\u6392\\u5E8F\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: SORT_TYPES,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(_List.Item, null, /*#__PURE__*/React.createElement(Link, {\n        href: \"/search\"\n      }, /*#__PURE__*/React.createElement(\"a\", null, item.name)));\n    }\n  }))));\n}\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, _ctx$query, query, sort, order, lang, page, queryString, result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx;\n            _ctx$query = ctx.query, query = _ctx$query.query, sort = _ctx$query.sort, order = _ctx$query.order, lang = _ctx$query.lang, page = _ctx$query.page;\n\n            if (query) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              repos: {\n                total_count: 0\n              }\n            });\n\n          case 4:\n            //?q=react+language:javascript&sort=stars&order=desc&page=2\n            queryString = \"?q=\".concat(query);\n            if (lang) queryString += \"+language:\".concat(lang);\n            if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc');\n            if (page) queryString += \"&page=\".concat(page); //调用搜索列表接口\n\n            _context.next = 10;\n            return api.request({\n              url: \"/search/repositories\".concat(queryString)\n            }, ctx.req, ctx.res);\n\n          case 10:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              repos: result.data\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default withRouter(Search);","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/search.js"],"names":["withRouter","Link","api","LANGUAGE","SORT_TYPES","name","value","order","Search","router","repos","console","log","marginBottom","item","getInitialProps","ctx","query","sort","lang","page","total_count","queryString","request","url","req","res","result","data"],"mappings":"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","sourcesContent":["import {withRouter} from 'next/router'\r\nimport {Row,Col,List} from 'antd'  //栅格\r\nimport Link from 'next/link'\r\n\r\nimport api from '../lib/api'\r\n\r\n//搜索条件\r\nconst LANGUAGE=['JavaScript','HTML','CSS','TypeScript','Java','Rust']\r\nconst SORT_TYPES=[\r\n  {\r\n    name:'Best Match'\r\n  },\r\n  {\r\n    name:'Most Stars',\r\n    value:'stars',\r\n    order:'desc'\r\n  },\r\n  {\r\n    name:'Fewest Stars',\r\n    value:'stars',\r\n    order:'asc'\r\n  },\r\n  {\r\n    name:'Most Forks',\r\n    value:'forks',\r\n    order:'desc'\r\n  },\r\n  {\r\n    name:'Fewest Forks',\r\n    value:'forks',\r\n    order:'asc'\r\n  },\r\n]\r\n\r\n/**\r\n * sort：排序方式\r\n * order：排序顺序（升/降序）\r\n * lang：仓库的项目开发主语言\r\n * page：分页页面\r\n */\r\n\r\nfunction Search({router,repos}){\r\n  console.log(repos)\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n           <List \r\n             bordered\r\n             header={<span className=\"list-header\">语言</span>}\r\n             style={{marginBottom:20}}\r\n             dataSource={LANGUAGE}\r\n             renderItem={item=>{\r\n               return (\r\n                 <List.Item>\r\n                   <Link href=\"/search\">\r\n                      <a>{item}</a>\r\n                   </Link>\r\n                 </List.Item>\r\n               )\r\n             }}\r\n           />\r\n            <List \r\n             bordered\r\n             header={<span className=\"list-header\">排序</span>}\r\n             style={{marginBottom:20}}\r\n             dataSource={SORT_TYPES}\r\n             renderItem={item=>{\r\n               return (\r\n                 <List.Item>\r\n                   <Link href=\"/search\">\r\n                      <a>{item.name}</a>\r\n                   </Link>\r\n                 </List.Item>\r\n               )\r\n             }}\r\n           />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nSearch.getInitialProps=async ({ctx})=>{\r\n  const {query,sort,order,lang,page}=ctx.query;\r\n  if(!query){\r\n    return {\r\n      repos:{\r\n        total_count:0\r\n      }\r\n    }\r\n  }\r\n  //?q=react+language:javascript&sort=stars&order=desc&page=2\r\n  let queryString=`?q=${query}`\r\n  if(lang) queryString+=`+language:${lang}`\r\n  if(sort) queryString+=`&sort=${sort}&order=${order||'desc'}`\r\n  if(page) queryString+=`&page=${page}`\r\n  //调用搜索列表接口\r\n  const result=await api.request({\r\n    url:`/search/repositories${queryString}`\r\n  },ctx.req,ctx.res)\r\n\r\n  return {\r\n    repos:result.data\r\n  }\r\n}\r\n\r\nexport default withRouter(Search)"]},"metadata":{},"sourceType":"module"}