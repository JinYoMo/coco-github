{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport MarkdownIt from 'markdown-it';\nimport withRepoBasic from '../../components/with-repo-basic';\nimport api from '../../lib/api';\nvar md = new MarkdownIt();\n\nfunction Detail(_ref) {\n  var readme = _ref.readme;\n  console.log(atob(readme.content));\n  return /*#__PURE__*/React.createElement(\"span\", null, \"Detail Index\");\n}\n\nDetail.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var _ref2$ctx, _ref2$ctx$query, owner, name, req, res, readmeResp;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref2$ctx = _ref2.ctx, _ref2$ctx$query = _ref2$ctx.query, owner = _ref2$ctx$query.owner, name = _ref2$ctx$query.name, req = _ref2$ctx.req, res = _ref2$ctx.res;\n            _context.next = 3;\n            return api.request({\n              url: \"/repos/\".concat(owner, \"/\").concat(name, \"/readme\")\n            }, req, res);\n\n          case 3:\n            readmeResp = _context.sent;\n            console.log();\n            return _context.abrupt(\"return\", {\n              readme: readmeResp.data\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default withRepoBasic(Detail, 'index');","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/pages/detail/index.js"],"names":["MarkdownIt","withRepoBasic","api","md","Detail","readme","console","log","atob","content","getInitialProps","ctx","query","owner","name","req","res","request","url","readmeResp","data"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,IAAMC,EAAE,GAAC,IAAIH,UAAJ,EAAT;;AAEA,SAASI,MAAT,OAA0B;AAAA,MAARC,MAAQ,QAARA,MAAQ;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACH,MAAM,CAACI,OAAR,CAAhB;AACF,sBAAO,iDAAP;AACC;;AAEDL,MAAM,CAACM,eAAP;AAAA,uEAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAOC,GAAP,8BAAYC,KAAZ,EAAmBC,KAAnB,mBAAmBA,KAAnB,EAAyBC,IAAzB,mBAAyBA,IAAzB,EAA+BC,GAA/B,aAA+BA,GAA/B,EAAmCC,GAAnC,aAAmCA,GAAnC;AAAA;AAAA,mBACKd,GAAG,CAACe,OAAJ,CAAY;AACnCC,cAAAA,GAAG,mBAAWL,KAAX,cAAoBC,IAApB;AADgC,aAAZ,EAEvBC,GAFuB,EAEnBC,GAFmB,CADL;;AAAA;AACdG,YAAAA,UADc;AAKpBb,YAAAA,OAAO,CAACC,GAAR;AALoB,6CAOb;AACLF,cAAAA,MAAM,EAACc,UAAU,CAACC;AADb,aAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAenB,aAAa,CAACG,MAAD,EAAQ,OAAR,CAA5B","sourcesContent":["import MarkdownIt from 'markdown-it'\r\nimport withRepoBasic from '../../components/with-repo-basic'\r\nimport api from '../../lib/api'\r\n\r\nconst md=new MarkdownIt()\r\n\r\nfunction Detail ({readme}){\r\n  console.log(atob(readme.content))\r\nreturn <span>Detail Index</span>\r\n}\r\n\r\nDetail.getInitialProps=async({ctx:{query:{owner,name},req,res}})=>{\r\n   const readmeResp = await api.request({\r\n     url:`/repos/${owner}/${name}/readme`\r\n   },req,res)\r\n\r\n   console.log()\r\n\r\n   return {\r\n     readme:readmeResp.data\r\n   }\r\n}\r\n\r\nexport default withRepoBasic(Detail,'index')"]},"metadata":{},"sourceType":"module"}