{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//创建store\nimport { createStore, combineReducers } from 'redux';\nvar initialState = {\n  count: 0\n};\nvar userInitialState = {\n  username: 'Jokcy'\n};\nvar ADD = 'ADD';\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state, action);\n\n  switch (action.type) {\n    case 'ADD':\n      return {\n        count: state.count + 1\n      };\n    //返回新对象 不能使用state.count+=1 return state 这种方式未改变state的地址，从而未对比值更新，即更新了状态，页面未渲染\n\n    default:\n      return state;\n  }\n}\n\nvar UPDATE_USERNAME = 'UPDATE_USERNAME';\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.name\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar allReducers = combineReducers({\n  counter: counterReducer,\n  user: userReducer\n});\nvar store = createStore(allReducers, {\n  counter: initialState,\n  user: userInitialState\n});\n\nfunction add(num) {\n  return {\n    type: 'ADD',\n    num: num\n  };\n} // console.log(store.getState())  //获取到state\n\n\nstore.dispatch({\n  type: 'ADD'\n}); //再次执行reducer，将action传入 从而更新state\n// console.log(store.getState())  //获取新的state\n//subscribe该方法每次数据变更均会调用(后面)\n\nstore.subscribe(function () {\n  console.log('change', store.getState());\n});\nstore.dispatch({\n  type: 'ADD'\n}); //再次执行reducer，将action传入 从而更新state\n\nstore.dispatch({\n  type: UPDATE_USERNAME,\n  name: 'Lilei'\n});\nexport default store;","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/store/store.js"],"names":["createStore","combineReducers","initialState","count","userInitialState","username","ADD","counterReducer","state","action","console","log","type","UPDATE_USERNAME","userReducer","name","allReducers","counter","user","store","add","num","dispatch","subscribe","getState"],"mappings":";AAAA;AACA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,IAAMC,YAAY,GAAC;AACjBC,EAAAA,KAAK,EAAC;AADW,CAAnB;AAGA,IAAMC,gBAAgB,GAAC;AACrBC,EAAAA,QAAQ,EAAC;AADY,CAAvB;AAGA,IAAMC,GAAG,GAAC,KAAV;;AACA,SAASC,cAAT,GAAkD;AAAA,MAA1BC,KAA0B,uEAApBN,YAAoB;AAAA,MAAPO,MAAO;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkBC,MAAlB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,KAAL;AACE,aAAO;AAACT,QAAAA,KAAK,EAACK,KAAK,CAACL,KAAN,GAAY;AAAnB,OAAP;AAA+B;;AACjC;AACE,aAAOK,KAAP;AAJJ;AAMD;;AACD,IAAMK,eAAe,GAAC,iBAAtB;;AACA,SAASC,WAAT,GAAmD;AAAA,MAA9BN,KAA8B,uEAAxBJ,gBAAwB;AAAA,MAAPK,MAAO;;AACjD,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKC,eAAL;AACE,+BACKL,KADL;AAEEH,QAAAA,QAAQ,EAACI,MAAM,CAACM;AAFlB;;AAIF;AACE,aAAOP,KAAP;AAPJ;AASD;;AACD,IAAMQ,WAAW,GAACf,eAAe,CAAC;AAChCgB,EAAAA,OAAO,EAACV,cADwB;AAEhCW,EAAAA,IAAI,EAACJ;AAF2B,CAAD,CAAjC;AAIA,IAAMK,KAAK,GAACnB,WAAW,CAACgB,WAAD,EAAa;AAClCC,EAAAA,OAAO,EAACf,YAD0B;AAElCgB,EAAAA,IAAI,EAACd;AAF6B,CAAb,CAAvB;;AAKA,SAASgB,GAAT,CAAaC,GAAb,EAAiB;AACf,SAAO;AACLT,IAAAA,IAAI,EAAC,KADA;AAELS,IAAAA,GAAG,EAAHA;AAFK,GAAP;AAID,C,CACD;;;AACAF,KAAK,CAACG,QAAN,CAAe;AAACV,EAAAA,IAAI,EAAC;AAAN,CAAf,E,CAA8B;AAC9B;AACA;;AACAO,KAAK,CAACI,SAAN,CAAgB,YAAI;AAClBb,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBQ,KAAK,CAACK,QAAN,EAArB;AACD,CAFD;AAGAL,KAAK,CAACG,QAAN,CAAe;AAACV,EAAAA,IAAI,EAAC;AAAN,CAAf,E,CAA8B;;AAC9BO,KAAK,CAACG,QAAN,CAAe;AAACV,EAAAA,IAAI,EAACC,eAAN;AAAsBE,EAAAA,IAAI,EAAC;AAA3B,CAAf;AAEA,eAAeI,KAAf","sourcesContent":["//创建store\r\nimport {createStore,combineReducers} from 'redux';\r\nconst initialState={\r\n  count:0,\r\n}\r\nconst userInitialState={\r\n  username:'Jokcy'\r\n}\r\nconst ADD='ADD';\r\nfunction counterReducer(state=initialState,action){\r\n  console.log(state,action)\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      return {count:state.count+1};  //返回新对象 不能使用state.count+=1 return state 这种方式未改变state的地址，从而未对比值更新，即更新了状态，页面未渲染\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst UPDATE_USERNAME='UPDATE_USERNAME';\r\nfunction userReducer(state=userInitialState,action){\r\n  switch (action.type){\r\n    case UPDATE_USERNAME:\r\n      return{\r\n        ...state,\r\n        username:action.name,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst allReducers=combineReducers({\r\n  counter:counterReducer,\r\n  user:userReducer\r\n})\r\nconst store=createStore(allReducers,{\r\n  counter:initialState,\r\n  user:userInitialState\r\n})\r\n\r\nfunction add(num){\r\n  return {\r\n    type:'ADD',\r\n    num,\r\n  }\r\n}\r\n// console.log(store.getState())  //获取到state\r\nstore.dispatch({type:'ADD'})  //再次执行reducer，将action传入 从而更新state\r\n// console.log(store.getState())  //获取新的state\r\n//subscribe该方法每次数据变更均会调用(后面)\r\nstore.subscribe(()=>{\r\n  console.log('change',store.getState());\r\n})\r\nstore.dispatch({type:'ADD'})  //再次执行reducer，将action传入 从而更新state\r\nstore.dispatch({type:UPDATE_USERNAME,name:'Lilei'})\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}