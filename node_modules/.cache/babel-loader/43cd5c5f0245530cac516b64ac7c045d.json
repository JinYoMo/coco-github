{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { useEffect } from 'react';\nimport Repo from './Repo';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport api from '../lib/api';\nimport { get, cache } from '../lib/repo-basic-cache';\n\nfunction makeQuery(queryObject) {\n  var query = _Object$entries(queryObject).reduce(function (result, entry) {\n    result.push(entry.join('='));\n    return result;\n  }, []).join('&');\n\n  return \"?\".concat(query);\n}\n\nvar isServer = typeof window === 'undefined';\nexport default function (Comp) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'index';\n\n  function WithDetail(_ref) {\n    var repoBasic = _ref.repoBasic,\n        router = _ref.router,\n        rest = _objectWithoutProperties(_ref, [\"repoBasic\", \"router\"]);\n\n    console.log(repoBasic, router);\n    var query = makeQuery(router.query);\n    useEffect(function () {\n      //对数据缓存\n      if (!isServer) {\n        cache(repoBasic);\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jsx-1060587426\" + \" \" + \"root\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jsx-1060587426\" + \" \" + \"repo-basic\"\n    }, /*#__PURE__*/React.createElement(Repo, {\n      repo: repoBasic\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jsx-1060587426\" + \" \" + \"tabs\"\n    }, type === 'index' ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"jsx-1060587426\" + \" \" + \"tab\"\n    }, \"Readme\") : /*#__PURE__*/React.createElement(Link, {\n      href: \"/detail\".concat(query)\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"jsx-1060587426\" + \" \" + \"tab index\"\n    }, \"Readme\")), type === 'issues' ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"jsx-1060587426\" + \" \" + \"tab\"\n    }, \"Issues\") : /*#__PURE__*/React.createElement(Link, {\n      href: \"/detail/issues\".concat(query)\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"jsx-1060587426\" + \" \" + \"tab issues\"\n    }, \"Issues\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jsx-1060587426\"\n    }, /*#__PURE__*/React.createElement(Comp, rest)), /*#__PURE__*/React.createElement(_JSXStyle, {\n      id: \"1060587426\"\n    }, [\".root.jsx-1060587426{padding-top:20px;}\", \".repo-basic.jsx-1060587426{padding:20px;border:1px solid #eee;margin-bottom:20px;border-radius:5px;}\", \".tab.jsx-1060587426+.tab.jsx-1060587426{margin-left:20px;}\"]));\n  }\n\n  WithDetail.getInitialProps = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n      var router, ctx, _ctx$query, owner, name, full_name, pageData, repoBasic;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              router = context.router, ctx = context.ctx;\n              _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name;\n              full_name = \"\".concat(owner, \"/\").concat(name); //可以调用公用布局之外其他组件的getInitialProps数据请求\n\n              pageData = {};\n\n              if (!Comp.getInitialProps) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 7;\n              return Comp.getInitialProps(context);\n\n            case 7:\n              pageData = _context.sent;\n\n            case 8:\n              if (!get(full_name)) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", _objectSpread({\n                repoBasic: get(full_name)\n              }, pageData));\n\n            case 10:\n              _context.next = 12;\n              return api.request({\n                url: \"/repos/\".concat(owner, \"/\").concat(name)\n              }, ctx.req, ctx.res);\n\n            case 12:\n              repoBasic = _context.sent;\n              return _context.abrupt(\"return\", _objectSpread({\n                repoBasic: repoBasic.data\n              }, pageData));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return withRouter(WithDetail);\n}","map":null,"metadata":{},"sourceType":"module"}