{"ast":null,"code":"import _Spin from \"antd/lib/spin\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Select from \"antd/lib/select\";\nimport React from \"react\";\nimport { useState, useCallback, useRef } from 'react';\nimport debounce from 'lodash/debounce';\nimport api from '../lib/api';\nvar Option = _Select.Option;\n\nfunction SearchUser(_ref) {\n  var onChange = _ref.onChange,\n      value = _ref.value;\n  //{current:0}\n  var lastFetchIdRef = useRef(0); //useRef消除闭包陷阱\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetching = _useState2[0],\n      setFetching = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1]; //debounce 用户输入的时间超过500ms才会执行\n\n\n  var fetchUser = useCallback(debounce(function (value) {\n    console.log('fetching user', value);\n    lastFetchIdRef.current += 1;\n    var fetchId = lastFetchIdRef.current; //每次请求id\n\n    setFetching(true);\n    setOptions([]); //清空数据\n    //服务端请求\n\n    api.request({\n      url: \"/search/users?q=\".concat(value)\n    }).then(function (resp) {\n      console.log('user:', resp); //在一次请求未结束 下一次请求开始时 直接将上一请求抛弃\n\n      if (fetchId !== lastFetchIdRef.current) {\n        return;\n      }\n\n      var data = resp.data.items.map(function (user) {\n        return {\n          text: user.login,\n          value: user.login\n        };\n      });\n      setFetching(false);\n      setOptions(data);\n    });\n  }, 500), []);\n\n  var handleChange = function handleChange(value) {\n    setOptions([]); //选择结束\n\n    setFetching(false);\n    onChange(value);\n  };\n\n  return /*#__PURE__*/React.createElement(_Select, {\n    style: {\n      width: 200\n    },\n    showSearch: true,\n    notFoundContent: fetching ? /*#__PURE__*/React.createElement(_Spin, {\n      size: \"small\"\n    }) : /*#__PURE__*/React.createElement(\"span\", null, \"nothing\"),\n    filterOption: false,\n    placeholder: \"\\u521B\\u5EFA\\u8005\",\n    value: value,\n    onChange: handleChange,\n    onSearch: fetchUser,\n    allowClear: true\n  }, options.map(function (op) {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: op.value,\n      key: op.value\n    }, op.text);\n  }));\n}\n\nexport default SearchUser;","map":{"version":3,"sources":["E:/个人项目/gitHub项目/coco-github/components/SearchUser.jsx"],"names":["useState","useCallback","useRef","debounce","api","Option","SearchUser","onChange","value","lastFetchIdRef","fetching","setFetching","options","setOptions","fetchUser","console","log","current","fetchId","request","url","then","resp","data","items","map","user","text","login","handleChange","width","op"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,QAA8C,OAA9C;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,IAAMC,MAAM,GAAG,QAAOA,MAAtB;;AAEA,SAASC,UAAT,OAA0C;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,MAATC,KAAS,QAATA,KAAS;AACxC;AACA,MAAMC,cAAc,GAAGP,MAAM,CAAC,CAAD,CAA7B,CAFwC,CAEN;;AAFM,kBAGRF,QAAQ,CAAC,KAAD,CAHA;AAAA;AAAA,MAGjCU,QAHiC;AAAA,MAGvBC,WAHuB;;AAAA,mBAIVX,QAAQ,CAAC,EAAD,CAJE;AAAA;AAAA,MAIjCY,OAJiC;AAAA,MAIxBC,UAJwB,kBAMxC;;;AACA,MAAMC,SAAS,GAAGb,WAAW,CAACE,QAAQ,CAAC,UAAAK,KAAK,EAAI;AAC9CO,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,KAA7B;AAEAC,IAAAA,cAAc,CAACQ,OAAf,IAA0B,CAA1B;AACA,QAAMC,OAAO,GAAGT,cAAc,CAACQ,OAA/B,CAJ8C,CAIN;;AACxCN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV,CAN8C,CAM9B;AAEhB;;AACAT,IAAAA,GAAG,CAACe,OAAJ,CAAY;AACVC,MAAAA,GAAG,4BAAqBZ,KAArB;AADO,KAAZ,EAGGa,IAHH,CAGQ,UAAAC,IAAI,EAAI;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,IAArB,EADY,CAEZ;;AACA,UAAIJ,OAAO,KAAKT,cAAc,CAACQ,OAA/B,EAAwC;AACtC;AACD;;AACD,UAAMM,IAAI,GAAGD,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,IAAI;AAAA,eAAK;AACxCC,UAAAA,IAAI,EAAED,IAAI,CAACE,KAD6B;AAExCpB,UAAAA,KAAK,EAAEkB,IAAI,CAACE;AAF4B,SAAL;AAAA,OAAxB,CAAb;AAKAjB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,UAAU,CAACU,IAAD,CAAV;AACD,KAhBH;AAiBD,GA1BqC,EA0BnC,GA1BmC,CAAT,EA0BpB,EA1BoB,CAA7B;;AA4BA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAACrB,KAAD,EAAW;AAC9BK,IAAAA,UAAU,CAAC,EAAD,CAAV,CAD8B,CACd;;AAChBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACD,GAJD;;AAMA,sBAAO;AACL,IAAA,KAAK,EAAE;AAAEsB,MAAAA,KAAK,EAAE;AAAT,KADF;AAEL,IAAA,UAAU,EAAE,IAFP;AAGL,IAAA,eAAe,EAAEpB,QAAQ,gBAAG;AAAM,MAAA,IAAI,EAAC;AAAX,MAAH,gBAA2B,4CAH/C;AAIL,IAAA,YAAY,EAAE,KAJT;AAKL,IAAA,WAAW,EAAC,oBALP;AAML,IAAA,KAAK,EAAEF,KANF;AAOL,IAAA,QAAQ,EAAEqB,YAPL;AAQL,IAAA,QAAQ,EAAEf,SARL;AASL,IAAA,UAAU,EAAE;AATP,KAYHF,OAAO,CAACa,GAAR,CAAY,UAAAM,EAAE;AAAA,wBACZ,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,EAAE,CAACvB,KAAlB;AAAyB,MAAA,GAAG,EAAEuB,EAAE,CAACvB;AAAjC,OAAyCuB,EAAE,CAACJ,IAA5C,CADY;AAAA,GAAd,CAZG,CAAP;AAiBD;;AAED,eAAerB,UAAf","sourcesContent":["import { useState, useCallback, useRef } from 'react'\r\nimport { Select, Spin } from 'antd'\r\nimport debounce from 'lodash/debounce'\r\n\r\nimport api from '../lib/api'\r\n\r\nconst Option = Select.Option\r\n\r\nfunction SearchUser ({ onChange, value }) {\r\n  //{current:0}\r\n  const lastFetchIdRef = useRef(0)  //useRef消除闭包陷阱\r\n  const [fetching, setFetching] = useState(false)\r\n  const [options, setOptions] = useState([])\r\n\r\n  //debounce 用户输入的时间超过500ms才会执行\r\n  const fetchUser = useCallback(debounce(value => {\r\n    console.log('fetching user', value)\r\n\r\n    lastFetchIdRef.current += 1\r\n    const fetchId = lastFetchIdRef.current  //每次请求id\r\n    setFetching(true)\r\n    setOptions([])  //清空数据\r\n\r\n    //服务端请求\r\n    api.request({\r\n      url: `/search/users?q=${value}`\r\n    })\r\n      .then(resp => {\r\n        console.log('user:', resp)\r\n        //在一次请求未结束 下一次请求开始时 直接将上一请求抛弃\r\n        if (fetchId !== lastFetchIdRef.current) {\r\n          return\r\n        }\r\n        const data = resp.data.items.map(user => ({\r\n          text: user.login,\r\n          value: user.login\r\n        }))\r\n\r\n        setFetching(false)\r\n        setOptions(data)\r\n      })\r\n  }, 500), [])\r\n\r\n  const handleChange = (value) => {\r\n    setOptions([])  //选择结束\r\n    setFetching(false)\r\n    onChange(value)\r\n  }\r\n\r\n  return <Select\r\n    style={{ width: 200 }}\r\n    showSearch={true}\r\n    notFoundContent={fetching ? <Spin size=\"small\" /> : <span>nothing</span>}\r\n    filterOption={false}\r\n    placeholder=\"创建者\"\r\n    value={value}\r\n    onChange={handleChange}\r\n    onSearch={fetchUser}\r\n    allowClear={true}\r\n  >\r\n    {\r\n      options.map(op => (\r\n        <Option value={op.value} key={op.value}>{op.text}</Option>\r\n      ))\r\n    }\r\n  </Select>\r\n}\r\n\r\nexport default SearchUser"]},"metadata":{},"sourceType":"module"}